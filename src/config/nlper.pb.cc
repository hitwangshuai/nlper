// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nlper.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nlper.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace nlper {

namespace {

const ::google::protobuf::Descriptor* DictConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DictConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* DictManagerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DictManagerConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnalysisMethodConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalysisMethodConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnalysisConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalysisConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* PatternConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PatternConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchingConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchingConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* NlperStrategyConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NlperStrategyConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqPreprocPluginConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqPreprocPluginConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqPostprocPluginConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqPostprocPluginConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nlper_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_nlper_2eproto() {
  protobuf_AddDesc_nlper_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nlper.proto");
  GOOGLE_CHECK(file != NULL);
  DictConfig_descriptor_ = file->message_type(0);
  static const int DictConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, blob_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, is_reload_able_),
  };
  DictConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DictConfig_descriptor_,
      DictConfig::internal_default_instance(),
      DictConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, _has_bits_),
      -1,
      -1,
      sizeof(DictConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, _internal_metadata_));
  DictManagerConfig_descriptor_ = file->message_type(1);
  static const int DictManagerConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, dict_config_),
  };
  DictManagerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DictManagerConfig_descriptor_,
      DictManagerConfig::internal_default_instance(),
      DictManagerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, _has_bits_),
      -1,
      -1,
      sizeof(DictManagerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, _internal_metadata_));
  AnalysisMethodConfig_descriptor_ = file->message_type(2);
  static const int AnalysisMethodConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, need_phrase_seg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, thread_num_),
  };
  AnalysisMethodConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnalysisMethodConfig_descriptor_,
      AnalysisMethodConfig::internal_default_instance(),
      AnalysisMethodConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, _has_bits_),
      -1,
      -1,
      sizeof(AnalysisMethodConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, _internal_metadata_));
  AnalysisConfig_descriptor_ = file->message_type(3);
  static const int AnalysisConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, hide_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, analysis_method_),
  };
  AnalysisConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnalysisConfig_descriptor_,
      AnalysisConfig::internal_default_instance(),
      AnalysisConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, _has_bits_),
      -1,
      -1,
      sizeof(AnalysisConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, _internal_metadata_));
  PatternConfig_descriptor_ = file->message_type(4);
  static const int PatternConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, pat_fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, dict_fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, igno_fname_),
  };
  PatternConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PatternConfig_descriptor_,
      PatternConfig::internal_default_instance(),
      PatternConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, _has_bits_),
      -1,
      -1,
      sizeof(PatternConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, _internal_metadata_));
  MatchingConfig_descriptor_ = file->message_type(5);
  static const int MatchingConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, output_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, feature_weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, pattern_),
  };
  MatchingConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatchingConfig_descriptor_,
      MatchingConfig::internal_default_instance(),
      MatchingConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, _has_bits_),
      -1,
      -1,
      sizeof(MatchingConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, _internal_metadata_));
  MatchConfig_descriptor_ = file->message_type(6);
  static const int MatchConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchConfig, matching_config_),
  };
  MatchConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatchConfig_descriptor_,
      MatchConfig::internal_default_instance(),
      MatchConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchConfig, _has_bits_),
      -1,
      -1,
      sizeof(MatchConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchConfig, _internal_metadata_));
  NlperStrategyConfig_descriptor_ = file->message_type(7);
  static const int NlperStrategyConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NlperStrategyConfig, analysis_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NlperStrategyConfig, match_config_),
  };
  NlperStrategyConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NlperStrategyConfig_descriptor_,
      NlperStrategyConfig::internal_default_instance(),
      NlperStrategyConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NlperStrategyConfig, _has_bits_),
      -1,
      -1,
      sizeof(NlperStrategyConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NlperStrategyConfig, _internal_metadata_));
  ReqPreprocPluginConfig_descriptor_ = file->message_type(8);
  static const int ReqPreprocPluginConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, name_),
  };
  ReqPreprocPluginConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqPreprocPluginConfig_descriptor_,
      ReqPreprocPluginConfig::internal_default_instance(),
      ReqPreprocPluginConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, _has_bits_),
      -1,
      -1,
      sizeof(ReqPreprocPluginConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, _internal_metadata_));
  ReqPostprocPluginConfig_descriptor_ = file->message_type(9);
  static const int ReqPostprocPluginConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, name_),
  };
  ReqPostprocPluginConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqPostprocPluginConfig_descriptor_,
      ReqPostprocPluginConfig::internal_default_instance(),
      ReqPostprocPluginConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, _has_bits_),
      -1,
      -1,
      sizeof(ReqPostprocPluginConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, _internal_metadata_));
  ServerConfig_descriptor_ = file->message_type(10);
  static const int ServerConfig_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, idle_timeout_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, max_concurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, server_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, log_conf_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, nlper_dict_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, nlper_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, qdmatch_preproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, qdmatch_postproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, ddmatch_preproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, ddmatch_postproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, semtopic_preproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, semtopic_postproc_plugin_),
  };
  ServerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerConfig_descriptor_,
      ServerConfig::internal_default_instance(),
      ServerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, _has_bits_),
      -1,
      -1,
      sizeof(ServerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nlper_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DictConfig_descriptor_, DictConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DictManagerConfig_descriptor_, DictManagerConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnalysisMethodConfig_descriptor_, AnalysisMethodConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnalysisConfig_descriptor_, AnalysisConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PatternConfig_descriptor_, PatternConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatchingConfig_descriptor_, MatchingConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatchConfig_descriptor_, MatchConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NlperStrategyConfig_descriptor_, NlperStrategyConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqPreprocPluginConfig_descriptor_, ReqPreprocPluginConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqPostprocPluginConfig_descriptor_, ReqPostprocPluginConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerConfig_descriptor_, ServerConfig::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nlper_2eproto() {
  DictConfig_default_instance_.Shutdown();
  delete DictConfig_reflection_;
  DictManagerConfig_default_instance_.Shutdown();
  delete DictManagerConfig_reflection_;
  AnalysisMethodConfig_default_instance_.Shutdown();
  delete AnalysisMethodConfig_reflection_;
  AnalysisConfig_default_instance_.Shutdown();
  delete AnalysisConfig_reflection_;
  PatternConfig_default_instance_.Shutdown();
  delete PatternConfig_reflection_;
  MatchingConfig_default_instance_.Shutdown();
  delete MatchingConfig_reflection_;
  MatchConfig_default_instance_.Shutdown();
  delete MatchConfig_reflection_;
  NlperStrategyConfig_default_instance_.Shutdown();
  delete NlperStrategyConfig_reflection_;
  ReqPreprocPluginConfig_default_instance_.Shutdown();
  delete ReqPreprocPluginConfig_reflection_;
  ReqPostprocPluginConfig_default_instance_.Shutdown();
  delete ReqPostprocPluginConfig_reflection_;
  ServerConfig_default_instance_.Shutdown();
  delete ServerConfig_reflection_;
}

void protobuf_InitDefaults_nlper_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  DictConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DictManagerConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AnalysisMethodConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AnalysisConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PatternConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MatchingConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MatchConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  NlperStrategyConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReqPreprocPluginConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReqPostprocPluginConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServerConfig_default_instance_.DefaultConstruct();
  DictConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  DictManagerConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnalysisMethodConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnalysisConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  PatternConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  MatchingConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  MatchConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  NlperStrategyConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqPreprocPluginConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqPostprocPluginConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServerConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_nlper_2eproto_once_);
void protobuf_InitDefaults_nlper_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_nlper_2eproto_once_,
                 &protobuf_InitDefaults_nlper_2eproto_impl);
}
void protobuf_AddDesc_nlper_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_nlper_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013nlper.proto\022\005nlper\"a\n\nDictConfig\022\014\n\004na"
    "me\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\014\n\004path\030\003 \002(\t\022\021\n\t"
    "blob_name\030\004 \001(\t\022\026\n\016is_reload_able\030\005 \001(\010\""
    "I\n\021DictManagerConfig\022\014\n\004name\030\001 \002(\t\022&\n\013di"
    "ct_config\030\002 \003(\0132\021.nlper.DictConfig\"\207\001\n\024A"
    "nalysisMethodConfig\022\014\n\004name\030\001 \002(\t\022\014\n\004typ"
    "e\030\002 \002(\t\022\r\n\005level\030\003 \002(\r\022\027\n\017using_dict_nam"
    "e\030\004 \002(\t\022\027\n\017need_phrase_seg\030\005 \001(\010\022\022\n\nthre"
    "ad_num\030\006 \001(\r\"f\n\016AnalysisConfig\022\014\n\004name\030\001"
    " \001(\t\022\020\n\010hide_tag\030\002 \001(\t\0224\n\017analysis_metho"
    "d\030\003 \003(\0132\033.nlper.AnalysisMethodConfig\"J\n\r"
    "PatternConfig\022\021\n\tpat_fname\030\001 \002(\t\022\022\n\ndict"
    "_fname\030\002 \002(\t\022\022\n\nigno_fname\030\003 \002(\t\"\230\001\n\016Mat"
    "chingConfig\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022"
    "\027\n\017using_dict_name\030\003 \001(\t\022\022\n\noutput_num\030\004"
    " \002(\005\022\026\n\016feature_weight\030\005 \002(\002\022%\n\007pattern\030"
    "\006 \001(\0132\024.nlper.PatternConfig\"K\n\013MatchConf"
    "ig\022\014\n\004name\030\001 \001(\t\022.\n\017matching_config\030\002 \003("
    "\0132\025.nlper.MatchingConfig\"D\n\023NlperStrateg"
    "yConfig\022\027\n\017analysis_config\030\001 \001(\t\022\024\n\014matc"
    "h_config\030\002 \001(\t\"4\n\026ReqPreprocPluginConfig"
    "\022\014\n\004type\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\"5\n\027ReqPostp"
    "rocPluginConfig\022\014\n\004type\030\001 \002(\t\022\014\n\004name\030\002 "
    "\002(\t\"\306\004\n\014ServerConfig\022\030\n\020idle_timeout_sec"
    "\030\001 \002(\005\022\027\n\017max_concurrency\030\002 \002(\005\022\014\n\004port\030"
    "\003 \002(\t\022\016\n\006method\030\004 \002(\t\022\027\n\017server_conf_dir"
    "\030\005 \002(\t\022\025\n\rlog_conf_file\030\006 \002(\t\022\033\n\023nlper_d"
    "ict_conf_dir\030\007 \002(\t\022\026\n\016nlper_conf_dir\030\010 \002"
    "(\t\022=\n\026qdmatch_preproc_plugin\030\t \002(\0132\035.nlp"
    "er.ReqPreprocPluginConfig\022\?\n\027qdmatch_pos"
    "tproc_plugin\030\n \002(\0132\036.nlper.ReqPostprocPl"
    "uginConfig\022=\n\026ddmatch_preproc_plugin\030\013 \002"
    "(\0132\035.nlper.ReqPreprocPluginConfig\022\?\n\027ddm"
    "atch_postproc_plugin\030\014 \002(\0132\036.nlper.ReqPo"
    "stprocPluginConfig\022>\n\027semtopic_preproc_p"
    "lugin\030\r \002(\0132\035.nlper.ReqPreprocPluginConf"
    "ig\022@\n\030semtopic_postproc_plugin\030\016 \002(\0132\036.n"
    "lper.ReqPostprocPluginConfig", 1508);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nlper.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nlper_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_nlper_2eproto_once_);
void protobuf_AddDesc_nlper_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_nlper_2eproto_once_,
                 &protobuf_AddDesc_nlper_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nlper_2eproto {
  StaticDescriptorInitializer_nlper_2eproto() {
    protobuf_AddDesc_nlper_2eproto();
  }
} static_descriptor_initializer_nlper_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictConfig::kNameFieldNumber;
const int DictConfig::kTypeFieldNumber;
const int DictConfig::kPathFieldNumber;
const int DictConfig::kBlobNameFieldNumber;
const int DictConfig::kIsReloadAbleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictConfig::DictConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.DictConfig)
}

void DictConfig::InitAsDefaultInstance() {
}

DictConfig::DictConfig(const DictConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.DictConfig)
}

void DictConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_reload_able_ = false;
}

DictConfig::~DictConfig() {
  // @@protoc_insertion_point(destructor:nlper.DictConfig)
  SharedDtor();
}

void DictConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DictConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DictConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DictConfig_descriptor_;
}

const DictConfig& DictConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DictConfig> DictConfig_default_instance_;

DictConfig* DictConfig::New(::google::protobuf::Arena* arena) const {
  DictConfig* n = new DictConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DictConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.DictConfig)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_blob_name()) {
      blob_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_reload_able_ = false;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DictConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.DictConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.DictConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.DictConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_path;
        break;
      }

      // required string path = 3;
      case 3: {
        if (tag == 26) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.DictConfig.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_blob_name;
        break;
      }

      // optional string blob_name = 4;
      case 4: {
        if (tag == 34) {
         parse_blob_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blob_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->blob_name().data(), this->blob_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.DictConfig.blob_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_reload_able;
        break;
      }

      // optional bool is_reload_able = 5;
      case 5: {
        if (tag == 40) {
         parse_is_reload_able:
          set_has_is_reload_able();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reload_able_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.DictConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.DictConfig)
  return false;
#undef DO_
}

void DictConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.DictConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required string path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string blob_name = 4;
  if (has_blob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blob_name().data(), this->blob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.blob_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->blob_name(), output);
  }

  // optional bool is_reload_able = 5;
  if (has_is_reload_able()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_reload_able(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.DictConfig)
}

::google::protobuf::uint8* DictConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.DictConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required string path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string blob_name = 4;
  if (has_blob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blob_name().data(), this->blob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictConfig.blob_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->blob_name(), target);
  }

  // optional bool is_reload_able = 5;
  if (has_is_reload_able()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_reload_able(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.DictConfig)
  return target;
}

size_t DictConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.DictConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_path()) {
    // required string path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t DictConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.DictConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 24u) {
    // optional string blob_name = 4;
    if (has_blob_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blob_name());
    }

    // optional bool is_reload_able = 5;
    if (has_is_reload_able()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DictConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.DictConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DictConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.DictConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.DictConfig)
    UnsafeMergeFrom(*source);
  }
}

void DictConfig::MergeFrom(const DictConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.DictConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DictConfig::UnsafeMergeFrom(const DictConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_blob_name()) {
      set_has_blob_name();
      blob_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_name_);
    }
    if (from.has_is_reload_able()) {
      set_is_reload_able(from.is_reload_able());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DictConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.DictConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictConfig::CopyFrom(const DictConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.DictConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DictConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DictConfig::Swap(DictConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictConfig::InternalSwap(DictConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  path_.Swap(&other->path_);
  blob_name_.Swap(&other->blob_name_);
  std::swap(is_reload_able_, other->is_reload_able_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DictConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DictConfig_descriptor_;
  metadata.reflection = DictConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DictConfig

// required string name = 1;
bool DictConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DictConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DictConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DictConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DictConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.DictConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.DictConfig.name)
}
void DictConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.DictConfig.name)
}
void DictConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.DictConfig.name)
}
::std::string* DictConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.DictConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.DictConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.DictConfig.name)
}

// required string type = 2;
bool DictConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DictConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void DictConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void DictConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& DictConfig::type() const {
  // @@protoc_insertion_point(field_get:nlper.DictConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.DictConfig.type)
}
void DictConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.DictConfig.type)
}
void DictConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.DictConfig.type)
}
::std::string* DictConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:nlper.DictConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_type() {
  // @@protoc_insertion_point(field_release:nlper.DictConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:nlper.DictConfig.type)
}

// required string path = 3;
bool DictConfig::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DictConfig::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
void DictConfig::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void DictConfig::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& DictConfig::path() const {
  // @@protoc_insertion_point(field_get:nlper.DictConfig.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.DictConfig.path)
}
void DictConfig::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.DictConfig.path)
}
void DictConfig::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.DictConfig.path)
}
::std::string* DictConfig::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:nlper.DictConfig.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_path() {
  // @@protoc_insertion_point(field_release:nlper.DictConfig.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nlper.DictConfig.path)
}

// optional string blob_name = 4;
bool DictConfig::has_blob_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DictConfig::set_has_blob_name() {
  _has_bits_[0] |= 0x00000008u;
}
void DictConfig::clear_has_blob_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void DictConfig::clear_blob_name() {
  blob_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_blob_name();
}
const ::std::string& DictConfig::blob_name() const {
  // @@protoc_insertion_point(field_get:nlper.DictConfig.blob_name)
  return blob_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_blob_name(const ::std::string& value) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.DictConfig.blob_name)
}
void DictConfig::set_blob_name(const char* value) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.DictConfig.blob_name)
}
void DictConfig::set_blob_name(const char* value, size_t size) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.DictConfig.blob_name)
}
::std::string* DictConfig::mutable_blob_name() {
  set_has_blob_name();
  // @@protoc_insertion_point(field_mutable:nlper.DictConfig.blob_name)
  return blob_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_blob_name() {
  // @@protoc_insertion_point(field_release:nlper.DictConfig.blob_name)
  clear_has_blob_name();
  return blob_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_blob_name(::std::string* blob_name) {
  if (blob_name != NULL) {
    set_has_blob_name();
  } else {
    clear_has_blob_name();
  }
  blob_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob_name);
  // @@protoc_insertion_point(field_set_allocated:nlper.DictConfig.blob_name)
}

// optional bool is_reload_able = 5;
bool DictConfig::has_is_reload_able() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DictConfig::set_has_is_reload_able() {
  _has_bits_[0] |= 0x00000010u;
}
void DictConfig::clear_has_is_reload_able() {
  _has_bits_[0] &= ~0x00000010u;
}
void DictConfig::clear_is_reload_able() {
  is_reload_able_ = false;
  clear_has_is_reload_able();
}
bool DictConfig::is_reload_able() const {
  // @@protoc_insertion_point(field_get:nlper.DictConfig.is_reload_able)
  return is_reload_able_;
}
void DictConfig::set_is_reload_able(bool value) {
  set_has_is_reload_able();
  is_reload_able_ = value;
  // @@protoc_insertion_point(field_set:nlper.DictConfig.is_reload_able)
}

inline const DictConfig* DictConfig::internal_default_instance() {
  return &DictConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictManagerConfig::kNameFieldNumber;
const int DictManagerConfig::kDictConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictManagerConfig::DictManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.DictManagerConfig)
}

void DictManagerConfig::InitAsDefaultInstance() {
}

DictManagerConfig::DictManagerConfig(const DictManagerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.DictManagerConfig)
}

void DictManagerConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DictManagerConfig::~DictManagerConfig() {
  // @@protoc_insertion_point(destructor:nlper.DictManagerConfig)
  SharedDtor();
}

void DictManagerConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DictManagerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DictManagerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DictManagerConfig_descriptor_;
}

const DictManagerConfig& DictManagerConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DictManagerConfig> DictManagerConfig_default_instance_;

DictManagerConfig* DictManagerConfig::New(::google::protobuf::Arena* arena) const {
  DictManagerConfig* n = new DictManagerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DictManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.DictManagerConfig)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dict_config_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DictManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.DictManagerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.DictManagerConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dict_config;
        break;
      }

      // repeated .nlper.DictConfig dict_config = 2;
      case 2: {
        if (tag == 18) {
         parse_dict_config:
          DO_(input->IncrementRecursionDepth());
         parse_loop_dict_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dict_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_dict_config;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.DictManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.DictManagerConfig)
  return false;
#undef DO_
}

void DictManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.DictManagerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictManagerConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .nlper.DictConfig dict_config = 2;
  for (unsigned int i = 0, n = this->dict_config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dict_config(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.DictManagerConfig)
}

::google::protobuf::uint8* DictManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.DictManagerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.DictManagerConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .nlper.DictConfig dict_config = 2;
  for (unsigned int i = 0, n = this->dict_config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->dict_config(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.DictManagerConfig)
  return target;
}

size_t DictManagerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.DictManagerConfig)
  size_t total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .nlper.DictConfig dict_config = 2;
  {
    unsigned int count = this->dict_config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dict_config(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DictManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.DictManagerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DictManagerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.DictManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.DictManagerConfig)
    UnsafeMergeFrom(*source);
  }
}

void DictManagerConfig::MergeFrom(const DictManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.DictManagerConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DictManagerConfig::UnsafeMergeFrom(const DictManagerConfig& from) {
  GOOGLE_DCHECK(&from != this);
  dict_config_.MergeFrom(from.dict_config_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DictManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.DictManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictManagerConfig::CopyFrom(const DictManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.DictManagerConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DictManagerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->dict_config())) return false;
  return true;
}

void DictManagerConfig::Swap(DictManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictManagerConfig::InternalSwap(DictManagerConfig* other) {
  name_.Swap(&other->name_);
  dict_config_.UnsafeArenaSwap(&other->dict_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DictManagerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DictManagerConfig_descriptor_;
  metadata.reflection = DictManagerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DictManagerConfig

// required string name = 1;
bool DictManagerConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DictManagerConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DictManagerConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DictManagerConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DictManagerConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.DictManagerConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictManagerConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.DictManagerConfig.name)
}
void DictManagerConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.DictManagerConfig.name)
}
void DictManagerConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.DictManagerConfig.name)
}
::std::string* DictManagerConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.DictManagerConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictManagerConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.DictManagerConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictManagerConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.DictManagerConfig.name)
}

// repeated .nlper.DictConfig dict_config = 2;
int DictManagerConfig::dict_config_size() const {
  return dict_config_.size();
}
void DictManagerConfig::clear_dict_config() {
  dict_config_.Clear();
}
const ::nlper::DictConfig& DictManagerConfig::dict_config(int index) const {
  // @@protoc_insertion_point(field_get:nlper.DictManagerConfig.dict_config)
  return dict_config_.Get(index);
}
::nlper::DictConfig* DictManagerConfig::mutable_dict_config(int index) {
  // @@protoc_insertion_point(field_mutable:nlper.DictManagerConfig.dict_config)
  return dict_config_.Mutable(index);
}
::nlper::DictConfig* DictManagerConfig::add_dict_config() {
  // @@protoc_insertion_point(field_add:nlper.DictManagerConfig.dict_config)
  return dict_config_.Add();
}
::google::protobuf::RepeatedPtrField< ::nlper::DictConfig >*
DictManagerConfig::mutable_dict_config() {
  // @@protoc_insertion_point(field_mutable_list:nlper.DictManagerConfig.dict_config)
  return &dict_config_;
}
const ::google::protobuf::RepeatedPtrField< ::nlper::DictConfig >&
DictManagerConfig::dict_config() const {
  // @@protoc_insertion_point(field_list:nlper.DictManagerConfig.dict_config)
  return dict_config_;
}

inline const DictManagerConfig* DictManagerConfig::internal_default_instance() {
  return &DictManagerConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalysisMethodConfig::kNameFieldNumber;
const int AnalysisMethodConfig::kTypeFieldNumber;
const int AnalysisMethodConfig::kLevelFieldNumber;
const int AnalysisMethodConfig::kUsingDictNameFieldNumber;
const int AnalysisMethodConfig::kNeedPhraseSegFieldNumber;
const int AnalysisMethodConfig::kThreadNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalysisMethodConfig::AnalysisMethodConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.AnalysisMethodConfig)
}

void AnalysisMethodConfig::InitAsDefaultInstance() {
}

AnalysisMethodConfig::AnalysisMethodConfig(const AnalysisMethodConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.AnalysisMethodConfig)
}

void AnalysisMethodConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, reinterpret_cast<char*>(&thread_num_) -
    reinterpret_cast<char*>(&level_) + sizeof(thread_num_));
}

AnalysisMethodConfig::~AnalysisMethodConfig() {
  // @@protoc_insertion_point(destructor:nlper.AnalysisMethodConfig)
  SharedDtor();
}

void AnalysisMethodConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnalysisMethodConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalysisMethodConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalysisMethodConfig_descriptor_;
}

const AnalysisMethodConfig& AnalysisMethodConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnalysisMethodConfig> AnalysisMethodConfig_default_instance_;

AnalysisMethodConfig* AnalysisMethodConfig::New(::google::protobuf::Arena* arena) const {
  AnalysisMethodConfig* n = new AnalysisMethodConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnalysisMethodConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.AnalysisMethodConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AnalysisMethodConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AnalysisMethodConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(level_, thread_num_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AnalysisMethodConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.AnalysisMethodConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.AnalysisMethodConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.AnalysisMethodConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_using_dict_name;
        break;
      }

      // required string using_dict_name = 4;
      case 4: {
        if (tag == 34) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.AnalysisMethodConfig.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_need_phrase_seg;
        break;
      }

      // optional bool need_phrase_seg = 5;
      case 5: {
        if (tag == 40) {
         parse_need_phrase_seg:
          set_has_need_phrase_seg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_phrase_seg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_thread_num;
        break;
      }

      // optional uint32 thread_num = 6;
      case 6: {
        if (tag == 48) {
         parse_thread_num:
          set_has_thread_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thread_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.AnalysisMethodConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.AnalysisMethodConfig)
  return false;
#undef DO_
}

void AnalysisMethodConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.AnalysisMethodConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required string using_dict_name = 4;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->using_dict_name(), output);
  }

  // optional bool need_phrase_seg = 5;
  if (has_need_phrase_seg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->need_phrase_seg(), output);
  }

  // optional uint32 thread_num = 6;
  if (has_thread_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->thread_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.AnalysisMethodConfig)
}

::google::protobuf::uint8* AnalysisMethodConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.AnalysisMethodConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required string using_dict_name = 4;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisMethodConfig.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->using_dict_name(), target);
  }

  // optional bool need_phrase_seg = 5;
  if (has_need_phrase_seg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->need_phrase_seg(), target);
  }

  // optional uint32 thread_num = 6;
  if (has_thread_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->thread_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.AnalysisMethodConfig)
  return target;
}

size_t AnalysisMethodConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.AnalysisMethodConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_level()) {
    // required uint32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  if (has_using_dict_name()) {
    // required string using_dict_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->using_dict_name());
  }

  return total_size;
}
size_t AnalysisMethodConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.AnalysisMethodConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required uint32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());

    // required string using_dict_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->using_dict_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[4 / 32] & 48u) {
    // optional bool need_phrase_seg = 5;
    if (has_need_phrase_seg()) {
      total_size += 1 + 1;
    }

    // optional uint32 thread_num = 6;
    if (has_thread_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->thread_num());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalysisMethodConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.AnalysisMethodConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnalysisMethodConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalysisMethodConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.AnalysisMethodConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.AnalysisMethodConfig)
    UnsafeMergeFrom(*source);
  }
}

void AnalysisMethodConfig::MergeFrom(const AnalysisMethodConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.AnalysisMethodConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnalysisMethodConfig::UnsafeMergeFrom(const AnalysisMethodConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_need_phrase_seg()) {
      set_need_phrase_seg(from.need_phrase_seg());
    }
    if (from.has_thread_num()) {
      set_thread_num(from.thread_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AnalysisMethodConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.AnalysisMethodConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisMethodConfig::CopyFrom(const AnalysisMethodConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.AnalysisMethodConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnalysisMethodConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void AnalysisMethodConfig::Swap(AnalysisMethodConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalysisMethodConfig::InternalSwap(AnalysisMethodConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  std::swap(level_, other->level_);
  using_dict_name_.Swap(&other->using_dict_name_);
  std::swap(need_phrase_seg_, other->need_phrase_seg_);
  std::swap(thread_num_, other->thread_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnalysisMethodConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalysisMethodConfig_descriptor_;
  metadata.reflection = AnalysisMethodConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnalysisMethodConfig

// required string name = 1;
bool AnalysisMethodConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnalysisMethodConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AnalysisMethodConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnalysisMethodConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AnalysisMethodConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.name)
}
void AnalysisMethodConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.AnalysisMethodConfig.name)
}
void AnalysisMethodConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.AnalysisMethodConfig.name)
}
::std::string* AnalysisMethodConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisMethodConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.AnalysisMethodConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.AnalysisMethodConfig.name)
}

// required string type = 2;
bool AnalysisMethodConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnalysisMethodConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void AnalysisMethodConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnalysisMethodConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& AnalysisMethodConfig::type() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.type)
}
void AnalysisMethodConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.AnalysisMethodConfig.type)
}
void AnalysisMethodConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.AnalysisMethodConfig.type)
}
::std::string* AnalysisMethodConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisMethodConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_type() {
  // @@protoc_insertion_point(field_release:nlper.AnalysisMethodConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:nlper.AnalysisMethodConfig.type)
}

// required uint32 level = 3;
bool AnalysisMethodConfig::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AnalysisMethodConfig::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void AnalysisMethodConfig::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void AnalysisMethodConfig::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 AnalysisMethodConfig::level() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.level)
  return level_;
}
void AnalysisMethodConfig::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.level)
}

// required string using_dict_name = 4;
bool AnalysisMethodConfig::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AnalysisMethodConfig::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000008u;
}
void AnalysisMethodConfig::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void AnalysisMethodConfig::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& AnalysisMethodConfig::using_dict_name() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.using_dict_name)
}
void AnalysisMethodConfig::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.AnalysisMethodConfig.using_dict_name)
}
void AnalysisMethodConfig::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.AnalysisMethodConfig.using_dict_name)
}
::std::string* AnalysisMethodConfig::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisMethodConfig.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:nlper.AnalysisMethodConfig.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:nlper.AnalysisMethodConfig.using_dict_name)
}

// optional bool need_phrase_seg = 5;
bool AnalysisMethodConfig::has_need_phrase_seg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AnalysisMethodConfig::set_has_need_phrase_seg() {
  _has_bits_[0] |= 0x00000010u;
}
void AnalysisMethodConfig::clear_has_need_phrase_seg() {
  _has_bits_[0] &= ~0x00000010u;
}
void AnalysisMethodConfig::clear_need_phrase_seg() {
  need_phrase_seg_ = false;
  clear_has_need_phrase_seg();
}
bool AnalysisMethodConfig::need_phrase_seg() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.need_phrase_seg)
  return need_phrase_seg_;
}
void AnalysisMethodConfig::set_need_phrase_seg(bool value) {
  set_has_need_phrase_seg();
  need_phrase_seg_ = value;
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.need_phrase_seg)
}

// optional uint32 thread_num = 6;
bool AnalysisMethodConfig::has_thread_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AnalysisMethodConfig::set_has_thread_num() {
  _has_bits_[0] |= 0x00000020u;
}
void AnalysisMethodConfig::clear_has_thread_num() {
  _has_bits_[0] &= ~0x00000020u;
}
void AnalysisMethodConfig::clear_thread_num() {
  thread_num_ = 0u;
  clear_has_thread_num();
}
::google::protobuf::uint32 AnalysisMethodConfig::thread_num() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisMethodConfig.thread_num)
  return thread_num_;
}
void AnalysisMethodConfig::set_thread_num(::google::protobuf::uint32 value) {
  set_has_thread_num();
  thread_num_ = value;
  // @@protoc_insertion_point(field_set:nlper.AnalysisMethodConfig.thread_num)
}

inline const AnalysisMethodConfig* AnalysisMethodConfig::internal_default_instance() {
  return &AnalysisMethodConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalysisConfig::kNameFieldNumber;
const int AnalysisConfig::kHideTagFieldNumber;
const int AnalysisConfig::kAnalysisMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalysisConfig::AnalysisConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.AnalysisConfig)
}

void AnalysisConfig::InitAsDefaultInstance() {
}

AnalysisConfig::AnalysisConfig(const AnalysisConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.AnalysisConfig)
}

void AnalysisConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hide_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AnalysisConfig::~AnalysisConfig() {
  // @@protoc_insertion_point(destructor:nlper.AnalysisConfig)
  SharedDtor();
}

void AnalysisConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hide_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnalysisConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalysisConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalysisConfig_descriptor_;
}

const AnalysisConfig& AnalysisConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnalysisConfig> AnalysisConfig_default_instance_;

AnalysisConfig* AnalysisConfig::New(::google::protobuf::Arena* arena) const {
  AnalysisConfig* n = new AnalysisConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnalysisConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.AnalysisConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hide_tag()) {
      hide_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  analysis_method_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AnalysisConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.AnalysisConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.AnalysisConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hide_tag;
        break;
      }

      // optional string hide_tag = 2;
      case 2: {
        if (tag == 18) {
         parse_hide_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hide_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hide_tag().data(), this->hide_tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.AnalysisConfig.hide_tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_analysis_method;
        break;
      }

      // repeated .nlper.AnalysisMethodConfig analysis_method = 3;
      case 3: {
        if (tag == 26) {
         parse_analysis_method:
          DO_(input->IncrementRecursionDepth());
         parse_loop_analysis_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analysis_method()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_analysis_method;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.AnalysisConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.AnalysisConfig)
  return false;
#undef DO_
}

void AnalysisConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.AnalysisConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string hide_tag = 2;
  if (has_hide_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hide_tag().data(), this->hide_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisConfig.hide_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hide_tag(), output);
  }

  // repeated .nlper.AnalysisMethodConfig analysis_method = 3;
  for (unsigned int i = 0, n = this->analysis_method_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->analysis_method(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.AnalysisConfig)
}

::google::protobuf::uint8* AnalysisConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.AnalysisConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string hide_tag = 2;
  if (has_hide_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hide_tag().data(), this->hide_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.AnalysisConfig.hide_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hide_tag(), target);
  }

  // repeated .nlper.AnalysisMethodConfig analysis_method = 3;
  for (unsigned int i = 0, n = this->analysis_method_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->analysis_method(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.AnalysisConfig)
  return target;
}

size_t AnalysisConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.AnalysisConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string hide_tag = 2;
    if (has_hide_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hide_tag());
    }

  }
  // repeated .nlper.AnalysisMethodConfig analysis_method = 3;
  {
    unsigned int count = this->analysis_method_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analysis_method(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalysisConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.AnalysisConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnalysisConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalysisConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.AnalysisConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.AnalysisConfig)
    UnsafeMergeFrom(*source);
  }
}

void AnalysisConfig::MergeFrom(const AnalysisConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.AnalysisConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnalysisConfig::UnsafeMergeFrom(const AnalysisConfig& from) {
  GOOGLE_DCHECK(&from != this);
  analysis_method_.MergeFrom(from.analysis_method_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_hide_tag()) {
      set_has_hide_tag();
      hide_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hide_tag_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AnalysisConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.AnalysisConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisConfig::CopyFrom(const AnalysisConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.AnalysisConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnalysisConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->analysis_method())) return false;
  return true;
}

void AnalysisConfig::Swap(AnalysisConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalysisConfig::InternalSwap(AnalysisConfig* other) {
  name_.Swap(&other->name_);
  hide_tag_.Swap(&other->hide_tag_);
  analysis_method_.UnsafeArenaSwap(&other->analysis_method_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnalysisConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalysisConfig_descriptor_;
  metadata.reflection = AnalysisConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnalysisConfig

// optional string name = 1;
bool AnalysisConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnalysisConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AnalysisConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnalysisConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AnalysisConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.AnalysisConfig.name)
}
void AnalysisConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.AnalysisConfig.name)
}
void AnalysisConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.AnalysisConfig.name)
}
::std::string* AnalysisConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.AnalysisConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.AnalysisConfig.name)
}

// optional string hide_tag = 2;
bool AnalysisConfig::has_hide_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnalysisConfig::set_has_hide_tag() {
  _has_bits_[0] |= 0x00000002u;
}
void AnalysisConfig::clear_has_hide_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnalysisConfig::clear_hide_tag() {
  hide_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hide_tag();
}
const ::std::string& AnalysisConfig::hide_tag() const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisConfig.hide_tag)
  return hide_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_hide_tag(const ::std::string& value) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.AnalysisConfig.hide_tag)
}
void AnalysisConfig::set_hide_tag(const char* value) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.AnalysisConfig.hide_tag)
}
void AnalysisConfig::set_hide_tag(const char* value, size_t size) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.AnalysisConfig.hide_tag)
}
::std::string* AnalysisConfig::mutable_hide_tag() {
  set_has_hide_tag();
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisConfig.hide_tag)
  return hide_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisConfig::release_hide_tag() {
  // @@protoc_insertion_point(field_release:nlper.AnalysisConfig.hide_tag)
  clear_has_hide_tag();
  return hide_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_allocated_hide_tag(::std::string* hide_tag) {
  if (hide_tag != NULL) {
    set_has_hide_tag();
  } else {
    clear_has_hide_tag();
  }
  hide_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hide_tag);
  // @@protoc_insertion_point(field_set_allocated:nlper.AnalysisConfig.hide_tag)
}

// repeated .nlper.AnalysisMethodConfig analysis_method = 3;
int AnalysisConfig::analysis_method_size() const {
  return analysis_method_.size();
}
void AnalysisConfig::clear_analysis_method() {
  analysis_method_.Clear();
}
const ::nlper::AnalysisMethodConfig& AnalysisConfig::analysis_method(int index) const {
  // @@protoc_insertion_point(field_get:nlper.AnalysisConfig.analysis_method)
  return analysis_method_.Get(index);
}
::nlper::AnalysisMethodConfig* AnalysisConfig::mutable_analysis_method(int index) {
  // @@protoc_insertion_point(field_mutable:nlper.AnalysisConfig.analysis_method)
  return analysis_method_.Mutable(index);
}
::nlper::AnalysisMethodConfig* AnalysisConfig::add_analysis_method() {
  // @@protoc_insertion_point(field_add:nlper.AnalysisConfig.analysis_method)
  return analysis_method_.Add();
}
::google::protobuf::RepeatedPtrField< ::nlper::AnalysisMethodConfig >*
AnalysisConfig::mutable_analysis_method() {
  // @@protoc_insertion_point(field_mutable_list:nlper.AnalysisConfig.analysis_method)
  return &analysis_method_;
}
const ::google::protobuf::RepeatedPtrField< ::nlper::AnalysisMethodConfig >&
AnalysisConfig::analysis_method() const {
  // @@protoc_insertion_point(field_list:nlper.AnalysisConfig.analysis_method)
  return analysis_method_;
}

inline const AnalysisConfig* AnalysisConfig::internal_default_instance() {
  return &AnalysisConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatternConfig::kPatFnameFieldNumber;
const int PatternConfig::kDictFnameFieldNumber;
const int PatternConfig::kIgnoFnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatternConfig::PatternConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.PatternConfig)
}

void PatternConfig::InitAsDefaultInstance() {
}

PatternConfig::PatternConfig(const PatternConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.PatternConfig)
}

void PatternConfig::SharedCtor() {
  _cached_size_ = 0;
  pat_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dict_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igno_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PatternConfig::~PatternConfig() {
  // @@protoc_insertion_point(destructor:nlper.PatternConfig)
  SharedDtor();
}

void PatternConfig::SharedDtor() {
  pat_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dict_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igno_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PatternConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PatternConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PatternConfig_descriptor_;
}

const PatternConfig& PatternConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PatternConfig> PatternConfig_default_instance_;

PatternConfig* PatternConfig::New(::google::protobuf::Arena* arena) const {
  PatternConfig* n = new PatternConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PatternConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.PatternConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_pat_fname()) {
      pat_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dict_fname()) {
      dict_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_igno_fname()) {
      igno_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PatternConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.PatternConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string pat_fname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pat_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pat_fname().data(), this->pat_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.PatternConfig.pat_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dict_fname;
        break;
      }

      // required string dict_fname = 2;
      case 2: {
        if (tag == 18) {
         parse_dict_fname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dict_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dict_fname().data(), this->dict_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.PatternConfig.dict_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_igno_fname;
        break;
      }

      // required string igno_fname = 3;
      case 3: {
        if (tag == 26) {
         parse_igno_fname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_igno_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->igno_fname().data(), this->igno_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.PatternConfig.igno_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.PatternConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.PatternConfig)
  return false;
#undef DO_
}

void PatternConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.PatternConfig)
  // required string pat_fname = 1;
  if (has_pat_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pat_fname().data(), this->pat_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.pat_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pat_fname(), output);
  }

  // required string dict_fname = 2;
  if (has_dict_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dict_fname().data(), this->dict_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.dict_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dict_fname(), output);
  }

  // required string igno_fname = 3;
  if (has_igno_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->igno_fname().data(), this->igno_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.igno_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->igno_fname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.PatternConfig)
}

::google::protobuf::uint8* PatternConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.PatternConfig)
  // required string pat_fname = 1;
  if (has_pat_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pat_fname().data(), this->pat_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.pat_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pat_fname(), target);
  }

  // required string dict_fname = 2;
  if (has_dict_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dict_fname().data(), this->dict_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.dict_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dict_fname(), target);
  }

  // required string igno_fname = 3;
  if (has_igno_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->igno_fname().data(), this->igno_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.PatternConfig.igno_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->igno_fname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.PatternConfig)
  return target;
}

size_t PatternConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.PatternConfig)
  size_t total_size = 0;

  if (has_pat_fname()) {
    // required string pat_fname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pat_fname());
  }

  if (has_dict_fname()) {
    // required string dict_fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dict_fname());
  }

  if (has_igno_fname()) {
    // required string igno_fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->igno_fname());
  }

  return total_size;
}
size_t PatternConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.PatternConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string pat_fname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pat_fname());

    // required string dict_fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dict_fname());

    // required string igno_fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->igno_fname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PatternConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.PatternConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PatternConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PatternConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.PatternConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.PatternConfig)
    UnsafeMergeFrom(*source);
  }
}

void PatternConfig::MergeFrom(const PatternConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.PatternConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PatternConfig::UnsafeMergeFrom(const PatternConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pat_fname()) {
      set_has_pat_fname();
      pat_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pat_fname_);
    }
    if (from.has_dict_fname()) {
      set_has_dict_fname();
      dict_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dict_fname_);
    }
    if (from.has_igno_fname()) {
      set_has_igno_fname();
      igno_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.igno_fname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PatternConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.PatternConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatternConfig::CopyFrom(const PatternConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.PatternConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PatternConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PatternConfig::Swap(PatternConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatternConfig::InternalSwap(PatternConfig* other) {
  pat_fname_.Swap(&other->pat_fname_);
  dict_fname_.Swap(&other->dict_fname_);
  igno_fname_.Swap(&other->igno_fname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PatternConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PatternConfig_descriptor_;
  metadata.reflection = PatternConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PatternConfig

// required string pat_fname = 1;
bool PatternConfig::has_pat_fname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PatternConfig::set_has_pat_fname() {
  _has_bits_[0] |= 0x00000001u;
}
void PatternConfig::clear_has_pat_fname() {
  _has_bits_[0] &= ~0x00000001u;
}
void PatternConfig::clear_pat_fname() {
  pat_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pat_fname();
}
const ::std::string& PatternConfig::pat_fname() const {
  // @@protoc_insertion_point(field_get:nlper.PatternConfig.pat_fname)
  return pat_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_pat_fname(const ::std::string& value) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.PatternConfig.pat_fname)
}
void PatternConfig::set_pat_fname(const char* value) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.PatternConfig.pat_fname)
}
void PatternConfig::set_pat_fname(const char* value, size_t size) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.PatternConfig.pat_fname)
}
::std::string* PatternConfig::mutable_pat_fname() {
  set_has_pat_fname();
  // @@protoc_insertion_point(field_mutable:nlper.PatternConfig.pat_fname)
  return pat_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_pat_fname() {
  // @@protoc_insertion_point(field_release:nlper.PatternConfig.pat_fname)
  clear_has_pat_fname();
  return pat_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_pat_fname(::std::string* pat_fname) {
  if (pat_fname != NULL) {
    set_has_pat_fname();
  } else {
    clear_has_pat_fname();
  }
  pat_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pat_fname);
  // @@protoc_insertion_point(field_set_allocated:nlper.PatternConfig.pat_fname)
}

// required string dict_fname = 2;
bool PatternConfig::has_dict_fname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PatternConfig::set_has_dict_fname() {
  _has_bits_[0] |= 0x00000002u;
}
void PatternConfig::clear_has_dict_fname() {
  _has_bits_[0] &= ~0x00000002u;
}
void PatternConfig::clear_dict_fname() {
  dict_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dict_fname();
}
const ::std::string& PatternConfig::dict_fname() const {
  // @@protoc_insertion_point(field_get:nlper.PatternConfig.dict_fname)
  return dict_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_dict_fname(const ::std::string& value) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.PatternConfig.dict_fname)
}
void PatternConfig::set_dict_fname(const char* value) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.PatternConfig.dict_fname)
}
void PatternConfig::set_dict_fname(const char* value, size_t size) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.PatternConfig.dict_fname)
}
::std::string* PatternConfig::mutable_dict_fname() {
  set_has_dict_fname();
  // @@protoc_insertion_point(field_mutable:nlper.PatternConfig.dict_fname)
  return dict_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_dict_fname() {
  // @@protoc_insertion_point(field_release:nlper.PatternConfig.dict_fname)
  clear_has_dict_fname();
  return dict_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_dict_fname(::std::string* dict_fname) {
  if (dict_fname != NULL) {
    set_has_dict_fname();
  } else {
    clear_has_dict_fname();
  }
  dict_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dict_fname);
  // @@protoc_insertion_point(field_set_allocated:nlper.PatternConfig.dict_fname)
}

// required string igno_fname = 3;
bool PatternConfig::has_igno_fname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PatternConfig::set_has_igno_fname() {
  _has_bits_[0] |= 0x00000004u;
}
void PatternConfig::clear_has_igno_fname() {
  _has_bits_[0] &= ~0x00000004u;
}
void PatternConfig::clear_igno_fname() {
  igno_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_igno_fname();
}
const ::std::string& PatternConfig::igno_fname() const {
  // @@protoc_insertion_point(field_get:nlper.PatternConfig.igno_fname)
  return igno_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_igno_fname(const ::std::string& value) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.PatternConfig.igno_fname)
}
void PatternConfig::set_igno_fname(const char* value) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.PatternConfig.igno_fname)
}
void PatternConfig::set_igno_fname(const char* value, size_t size) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.PatternConfig.igno_fname)
}
::std::string* PatternConfig::mutable_igno_fname() {
  set_has_igno_fname();
  // @@protoc_insertion_point(field_mutable:nlper.PatternConfig.igno_fname)
  return igno_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_igno_fname() {
  // @@protoc_insertion_point(field_release:nlper.PatternConfig.igno_fname)
  clear_has_igno_fname();
  return igno_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_igno_fname(::std::string* igno_fname) {
  if (igno_fname != NULL) {
    set_has_igno_fname();
  } else {
    clear_has_igno_fname();
  }
  igno_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), igno_fname);
  // @@protoc_insertion_point(field_set_allocated:nlper.PatternConfig.igno_fname)
}

inline const PatternConfig* PatternConfig::internal_default_instance() {
  return &PatternConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchingConfig::kNameFieldNumber;
const int MatchingConfig::kTypeFieldNumber;
const int MatchingConfig::kUsingDictNameFieldNumber;
const int MatchingConfig::kOutputNumFieldNumber;
const int MatchingConfig::kFeatureWeightFieldNumber;
const int MatchingConfig::kPatternFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchingConfig::MatchingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.MatchingConfig)
}

void MatchingConfig::InitAsDefaultInstance() {
  pattern_ = const_cast< ::nlper::PatternConfig*>(
      ::nlper::PatternConfig::internal_default_instance());
}

MatchingConfig::MatchingConfig(const MatchingConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.MatchingConfig)
}

void MatchingConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pattern_ = NULL;
  ::memset(&output_num_, 0, reinterpret_cast<char*>(&feature_weight_) -
    reinterpret_cast<char*>(&output_num_) + sizeof(feature_weight_));
}

MatchingConfig::~MatchingConfig() {
  // @@protoc_insertion_point(destructor:nlper.MatchingConfig)
  SharedDtor();
}

void MatchingConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &MatchingConfig_default_instance_.get()) {
    delete pattern_;
  }
}

void MatchingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchingConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchingConfig_descriptor_;
}

const MatchingConfig& MatchingConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MatchingConfig> MatchingConfig_default_instance_;

MatchingConfig* MatchingConfig::New(::google::protobuf::Arena* arena) const {
  MatchingConfig* n = new MatchingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.MatchingConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MatchingConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MatchingConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(output_num_, feature_weight_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pattern()) {
      if (pattern_ != NULL) pattern_->::nlper::PatternConfig::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatchingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.MatchingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.MatchingConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.MatchingConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_using_dict_name;
        break;
      }

      // optional string using_dict_name = 3;
      case 3: {
        if (tag == 26) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.MatchingConfig.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_output_num;
        break;
      }

      // required int32 output_num = 4;
      case 4: {
        if (tag == 32) {
         parse_output_num:
          set_has_output_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_feature_weight;
        break;
      }

      // required float feature_weight = 5;
      case 5: {
        if (tag == 45) {
         parse_feature_weight:
          set_has_feature_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &feature_weight_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pattern;
        break;
      }

      // optional .nlper.PatternConfig pattern = 6;
      case 6: {
        if (tag == 50) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pattern()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.MatchingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.MatchingConfig)
  return false;
#undef DO_
}

void MatchingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.MatchingConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // optional string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->using_dict_name(), output);
  }

  // required int32 output_num = 4;
  if (has_output_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->output_num(), output);
  }

  // required float feature_weight = 5;
  if (has_feature_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->feature_weight(), output);
  }

  // optional .nlper.PatternConfig pattern = 6;
  if (has_pattern()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pattern_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.MatchingConfig)
}

::google::protobuf::uint8* MatchingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.MatchingConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchingConfig.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->using_dict_name(), target);
  }

  // required int32 output_num = 4;
  if (has_output_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->output_num(), target);
  }

  // required float feature_weight = 5;
  if (has_feature_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->feature_weight(), target);
  }

  // optional .nlper.PatternConfig pattern = 6;
  if (has_pattern()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pattern_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.MatchingConfig)
  return target;
}

size_t MatchingConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.MatchingConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_output_num()) {
    // required int32 output_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_num());
  }

  if (has_feature_weight()) {
    // required float feature_weight = 5;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t MatchingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.MatchingConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required int32 output_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_num());

    // required float feature_weight = 5;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 36u) {
    // optional string using_dict_name = 3;
    if (has_using_dict_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->using_dict_name());
    }

    // optional .nlper.PatternConfig pattern = 6;
    if (has_pattern()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pattern_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.MatchingConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MatchingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.MatchingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.MatchingConfig)
    UnsafeMergeFrom(*source);
  }
}

void MatchingConfig::MergeFrom(const MatchingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.MatchingConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MatchingConfig::UnsafeMergeFrom(const MatchingConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_output_num()) {
      set_output_num(from.output_num());
    }
    if (from.has_feature_weight()) {
      set_feature_weight(from.feature_weight());
    }
    if (from.has_pattern()) {
      mutable_pattern()->::nlper::PatternConfig::MergeFrom(from.pattern());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void MatchingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.MatchingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchingConfig::CopyFrom(const MatchingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.MatchingConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MatchingConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;

  if (has_pattern()) {
    if (!this->pattern_->IsInitialized()) return false;
  }
  return true;
}

void MatchingConfig::Swap(MatchingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchingConfig::InternalSwap(MatchingConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  using_dict_name_.Swap(&other->using_dict_name_);
  std::swap(output_num_, other->output_num_);
  std::swap(feature_weight_, other->feature_weight_);
  std::swap(pattern_, other->pattern_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchingConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchingConfig_descriptor_;
  metadata.reflection = MatchingConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchingConfig

// required string name = 1;
bool MatchingConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchingConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchingConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchingConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MatchingConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.MatchingConfig.name)
}
void MatchingConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.MatchingConfig.name)
}
void MatchingConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.MatchingConfig.name)
}
::std::string* MatchingConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.MatchingConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.MatchingConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.MatchingConfig.name)
}

// required string type = 2;
bool MatchingConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchingConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchingConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchingConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& MatchingConfig::type() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.MatchingConfig.type)
}
void MatchingConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.MatchingConfig.type)
}
void MatchingConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.MatchingConfig.type)
}
::std::string* MatchingConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:nlper.MatchingConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_type() {
  // @@protoc_insertion_point(field_release:nlper.MatchingConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:nlper.MatchingConfig.type)
}

// optional string using_dict_name = 3;
bool MatchingConfig::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MatchingConfig::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000004u;
}
void MatchingConfig::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void MatchingConfig::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& MatchingConfig::using_dict_name() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.MatchingConfig.using_dict_name)
}
void MatchingConfig::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.MatchingConfig.using_dict_name)
}
void MatchingConfig::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.MatchingConfig.using_dict_name)
}
::std::string* MatchingConfig::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:nlper.MatchingConfig.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:nlper.MatchingConfig.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:nlper.MatchingConfig.using_dict_name)
}

// required int32 output_num = 4;
bool MatchingConfig::has_output_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MatchingConfig::set_has_output_num() {
  _has_bits_[0] |= 0x00000008u;
}
void MatchingConfig::clear_has_output_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void MatchingConfig::clear_output_num() {
  output_num_ = 0;
  clear_has_output_num();
}
::google::protobuf::int32 MatchingConfig::output_num() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.output_num)
  return output_num_;
}
void MatchingConfig::set_output_num(::google::protobuf::int32 value) {
  set_has_output_num();
  output_num_ = value;
  // @@protoc_insertion_point(field_set:nlper.MatchingConfig.output_num)
}

// required float feature_weight = 5;
bool MatchingConfig::has_feature_weight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MatchingConfig::set_has_feature_weight() {
  _has_bits_[0] |= 0x00000010u;
}
void MatchingConfig::clear_has_feature_weight() {
  _has_bits_[0] &= ~0x00000010u;
}
void MatchingConfig::clear_feature_weight() {
  feature_weight_ = 0;
  clear_has_feature_weight();
}
float MatchingConfig::feature_weight() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.feature_weight)
  return feature_weight_;
}
void MatchingConfig::set_feature_weight(float value) {
  set_has_feature_weight();
  feature_weight_ = value;
  // @@protoc_insertion_point(field_set:nlper.MatchingConfig.feature_weight)
}

// optional .nlper.PatternConfig pattern = 6;
bool MatchingConfig::has_pattern() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MatchingConfig::set_has_pattern() {
  _has_bits_[0] |= 0x00000020u;
}
void MatchingConfig::clear_has_pattern() {
  _has_bits_[0] &= ~0x00000020u;
}
void MatchingConfig::clear_pattern() {
  if (pattern_ != NULL) pattern_->::nlper::PatternConfig::Clear();
  clear_has_pattern();
}
const ::nlper::PatternConfig& MatchingConfig::pattern() const {
  // @@protoc_insertion_point(field_get:nlper.MatchingConfig.pattern)
  return pattern_ != NULL ? *pattern_
                         : *::nlper::PatternConfig::internal_default_instance();
}
::nlper::PatternConfig* MatchingConfig::mutable_pattern() {
  set_has_pattern();
  if (pattern_ == NULL) {
    pattern_ = new ::nlper::PatternConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.MatchingConfig.pattern)
  return pattern_;
}
::nlper::PatternConfig* MatchingConfig::release_pattern() {
  // @@protoc_insertion_point(field_release:nlper.MatchingConfig.pattern)
  clear_has_pattern();
  ::nlper::PatternConfig* temp = pattern_;
  pattern_ = NULL;
  return temp;
}
void MatchingConfig::set_allocated_pattern(::nlper::PatternConfig* pattern) {
  delete pattern_;
  pattern_ = pattern;
  if (pattern) {
    set_has_pattern();
  } else {
    clear_has_pattern();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.MatchingConfig.pattern)
}

inline const MatchingConfig* MatchingConfig::internal_default_instance() {
  return &MatchingConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchConfig::kNameFieldNumber;
const int MatchConfig::kMatchingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchConfig::MatchConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.MatchConfig)
}

void MatchConfig::InitAsDefaultInstance() {
}

MatchConfig::MatchConfig(const MatchConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.MatchConfig)
}

void MatchConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MatchConfig::~MatchConfig() {
  // @@protoc_insertion_point(destructor:nlper.MatchConfig)
  SharedDtor();
}

void MatchConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchConfig_descriptor_;
}

const MatchConfig& MatchConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MatchConfig> MatchConfig_default_instance_;

MatchConfig* MatchConfig::New(::google::protobuf::Arena* arena) const {
  MatchConfig* n = new MatchConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.MatchConfig)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  matching_config_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatchConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.MatchConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.MatchConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_matching_config;
        break;
      }

      // repeated .nlper.MatchingConfig matching_config = 2;
      case 2: {
        if (tag == 18) {
         parse_matching_config:
          DO_(input->IncrementRecursionDepth());
         parse_loop_matching_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matching_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_matching_config;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.MatchConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.MatchConfig)
  return false;
#undef DO_
}

void MatchConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.MatchConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .nlper.MatchingConfig matching_config = 2;
  for (unsigned int i = 0, n = this->matching_config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->matching_config(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.MatchConfig)
}

::google::protobuf::uint8* MatchConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.MatchConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.MatchConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .nlper.MatchingConfig matching_config = 2;
  for (unsigned int i = 0, n = this->matching_config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->matching_config(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.MatchConfig)
  return target;
}

size_t MatchConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.MatchConfig)
  size_t total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .nlper.MatchingConfig matching_config = 2;
  {
    unsigned int count = this->matching_config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matching_config(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.MatchConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MatchConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.MatchConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.MatchConfig)
    UnsafeMergeFrom(*source);
  }
}

void MatchConfig::MergeFrom(const MatchConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.MatchConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MatchConfig::UnsafeMergeFrom(const MatchConfig& from) {
  GOOGLE_DCHECK(&from != this);
  matching_config_.MergeFrom(from.matching_config_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void MatchConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.MatchConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchConfig::CopyFrom(const MatchConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.MatchConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MatchConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->matching_config())) return false;
  return true;
}

void MatchConfig::Swap(MatchConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchConfig::InternalSwap(MatchConfig* other) {
  name_.Swap(&other->name_);
  matching_config_.UnsafeArenaSwap(&other->matching_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchConfig_descriptor_;
  metadata.reflection = MatchConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchConfig

// optional string name = 1;
bool MatchConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MatchConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.MatchConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.MatchConfig.name)
}
void MatchConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.MatchConfig.name)
}
void MatchConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.MatchConfig.name)
}
::std::string* MatchConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.MatchConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.MatchConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.MatchConfig.name)
}

// repeated .nlper.MatchingConfig matching_config = 2;
int MatchConfig::matching_config_size() const {
  return matching_config_.size();
}
void MatchConfig::clear_matching_config() {
  matching_config_.Clear();
}
const ::nlper::MatchingConfig& MatchConfig::matching_config(int index) const {
  // @@protoc_insertion_point(field_get:nlper.MatchConfig.matching_config)
  return matching_config_.Get(index);
}
::nlper::MatchingConfig* MatchConfig::mutable_matching_config(int index) {
  // @@protoc_insertion_point(field_mutable:nlper.MatchConfig.matching_config)
  return matching_config_.Mutable(index);
}
::nlper::MatchingConfig* MatchConfig::add_matching_config() {
  // @@protoc_insertion_point(field_add:nlper.MatchConfig.matching_config)
  return matching_config_.Add();
}
::google::protobuf::RepeatedPtrField< ::nlper::MatchingConfig >*
MatchConfig::mutable_matching_config() {
  // @@protoc_insertion_point(field_mutable_list:nlper.MatchConfig.matching_config)
  return &matching_config_;
}
const ::google::protobuf::RepeatedPtrField< ::nlper::MatchingConfig >&
MatchConfig::matching_config() const {
  // @@protoc_insertion_point(field_list:nlper.MatchConfig.matching_config)
  return matching_config_;
}

inline const MatchConfig* MatchConfig::internal_default_instance() {
  return &MatchConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NlperStrategyConfig::kAnalysisConfigFieldNumber;
const int NlperStrategyConfig::kMatchConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NlperStrategyConfig::NlperStrategyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.NlperStrategyConfig)
}

void NlperStrategyConfig::InitAsDefaultInstance() {
}

NlperStrategyConfig::NlperStrategyConfig(const NlperStrategyConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.NlperStrategyConfig)
}

void NlperStrategyConfig::SharedCtor() {
  _cached_size_ = 0;
  analysis_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NlperStrategyConfig::~NlperStrategyConfig() {
  // @@protoc_insertion_point(destructor:nlper.NlperStrategyConfig)
  SharedDtor();
}

void NlperStrategyConfig::SharedDtor() {
  analysis_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NlperStrategyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NlperStrategyConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NlperStrategyConfig_descriptor_;
}

const NlperStrategyConfig& NlperStrategyConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NlperStrategyConfig> NlperStrategyConfig_default_instance_;

NlperStrategyConfig* NlperStrategyConfig::New(::google::protobuf::Arena* arena) const {
  NlperStrategyConfig* n = new NlperStrategyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NlperStrategyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.NlperStrategyConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_analysis_config()) {
      analysis_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_match_config()) {
      match_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NlperStrategyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.NlperStrategyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string analysis_config = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_analysis_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->analysis_config().data(), this->analysis_config().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.NlperStrategyConfig.analysis_config");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_match_config;
        break;
      }

      // optional string match_config = 2;
      case 2: {
        if (tag == 18) {
         parse_match_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->match_config().data(), this->match_config().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.NlperStrategyConfig.match_config");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.NlperStrategyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.NlperStrategyConfig)
  return false;
#undef DO_
}

void NlperStrategyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.NlperStrategyConfig)
  // optional string analysis_config = 1;
  if (has_analysis_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analysis_config().data(), this->analysis_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.NlperStrategyConfig.analysis_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->analysis_config(), output);
  }

  // optional string match_config = 2;
  if (has_match_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_config().data(), this->match_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.NlperStrategyConfig.match_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->match_config(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.NlperStrategyConfig)
}

::google::protobuf::uint8* NlperStrategyConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.NlperStrategyConfig)
  // optional string analysis_config = 1;
  if (has_analysis_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analysis_config().data(), this->analysis_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.NlperStrategyConfig.analysis_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->analysis_config(), target);
  }

  // optional string match_config = 2;
  if (has_match_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_config().data(), this->match_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.NlperStrategyConfig.match_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->match_config(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.NlperStrategyConfig)
  return target;
}

size_t NlperStrategyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.NlperStrategyConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string analysis_config = 1;
    if (has_analysis_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->analysis_config());
    }

    // optional string match_config = 2;
    if (has_match_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->match_config());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NlperStrategyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.NlperStrategyConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NlperStrategyConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NlperStrategyConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.NlperStrategyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.NlperStrategyConfig)
    UnsafeMergeFrom(*source);
  }
}

void NlperStrategyConfig::MergeFrom(const NlperStrategyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.NlperStrategyConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NlperStrategyConfig::UnsafeMergeFrom(const NlperStrategyConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_analysis_config()) {
      set_has_analysis_config();
      analysis_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.analysis_config_);
    }
    if (from.has_match_config()) {
      set_has_match_config();
      match_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_config_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void NlperStrategyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.NlperStrategyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NlperStrategyConfig::CopyFrom(const NlperStrategyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.NlperStrategyConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NlperStrategyConfig::IsInitialized() const {

  return true;
}

void NlperStrategyConfig::Swap(NlperStrategyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NlperStrategyConfig::InternalSwap(NlperStrategyConfig* other) {
  analysis_config_.Swap(&other->analysis_config_);
  match_config_.Swap(&other->match_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NlperStrategyConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NlperStrategyConfig_descriptor_;
  metadata.reflection = NlperStrategyConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NlperStrategyConfig

// optional string analysis_config = 1;
bool NlperStrategyConfig::has_analysis_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NlperStrategyConfig::set_has_analysis_config() {
  _has_bits_[0] |= 0x00000001u;
}
void NlperStrategyConfig::clear_has_analysis_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void NlperStrategyConfig::clear_analysis_config() {
  analysis_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_analysis_config();
}
const ::std::string& NlperStrategyConfig::analysis_config() const {
  // @@protoc_insertion_point(field_get:nlper.NlperStrategyConfig.analysis_config)
  return analysis_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NlperStrategyConfig::set_analysis_config(const ::std::string& value) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.NlperStrategyConfig.analysis_config)
}
void NlperStrategyConfig::set_analysis_config(const char* value) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.NlperStrategyConfig.analysis_config)
}
void NlperStrategyConfig::set_analysis_config(const char* value, size_t size) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.NlperStrategyConfig.analysis_config)
}
::std::string* NlperStrategyConfig::mutable_analysis_config() {
  set_has_analysis_config();
  // @@protoc_insertion_point(field_mutable:nlper.NlperStrategyConfig.analysis_config)
  return analysis_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NlperStrategyConfig::release_analysis_config() {
  // @@protoc_insertion_point(field_release:nlper.NlperStrategyConfig.analysis_config)
  clear_has_analysis_config();
  return analysis_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NlperStrategyConfig::set_allocated_analysis_config(::std::string* analysis_config) {
  if (analysis_config != NULL) {
    set_has_analysis_config();
  } else {
    clear_has_analysis_config();
  }
  analysis_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), analysis_config);
  // @@protoc_insertion_point(field_set_allocated:nlper.NlperStrategyConfig.analysis_config)
}

// optional string match_config = 2;
bool NlperStrategyConfig::has_match_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NlperStrategyConfig::set_has_match_config() {
  _has_bits_[0] |= 0x00000002u;
}
void NlperStrategyConfig::clear_has_match_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void NlperStrategyConfig::clear_match_config() {
  match_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_match_config();
}
const ::std::string& NlperStrategyConfig::match_config() const {
  // @@protoc_insertion_point(field_get:nlper.NlperStrategyConfig.match_config)
  return match_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NlperStrategyConfig::set_match_config(const ::std::string& value) {
  set_has_match_config();
  match_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.NlperStrategyConfig.match_config)
}
void NlperStrategyConfig::set_match_config(const char* value) {
  set_has_match_config();
  match_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.NlperStrategyConfig.match_config)
}
void NlperStrategyConfig::set_match_config(const char* value, size_t size) {
  set_has_match_config();
  match_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.NlperStrategyConfig.match_config)
}
::std::string* NlperStrategyConfig::mutable_match_config() {
  set_has_match_config();
  // @@protoc_insertion_point(field_mutable:nlper.NlperStrategyConfig.match_config)
  return match_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NlperStrategyConfig::release_match_config() {
  // @@protoc_insertion_point(field_release:nlper.NlperStrategyConfig.match_config)
  clear_has_match_config();
  return match_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NlperStrategyConfig::set_allocated_match_config(::std::string* match_config) {
  if (match_config != NULL) {
    set_has_match_config();
  } else {
    clear_has_match_config();
  }
  match_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), match_config);
  // @@protoc_insertion_point(field_set_allocated:nlper.NlperStrategyConfig.match_config)
}

inline const NlperStrategyConfig* NlperStrategyConfig::internal_default_instance() {
  return &NlperStrategyConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqPreprocPluginConfig::kTypeFieldNumber;
const int ReqPreprocPluginConfig::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqPreprocPluginConfig::ReqPreprocPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.ReqPreprocPluginConfig)
}

void ReqPreprocPluginConfig::InitAsDefaultInstance() {
}

ReqPreprocPluginConfig::ReqPreprocPluginConfig(const ReqPreprocPluginConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.ReqPreprocPluginConfig)
}

void ReqPreprocPluginConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqPreprocPluginConfig::~ReqPreprocPluginConfig() {
  // @@protoc_insertion_point(destructor:nlper.ReqPreprocPluginConfig)
  SharedDtor();
}

void ReqPreprocPluginConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqPreprocPluginConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqPreprocPluginConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqPreprocPluginConfig_descriptor_;
}

const ReqPreprocPluginConfig& ReqPreprocPluginConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqPreprocPluginConfig> ReqPreprocPluginConfig_default_instance_;

ReqPreprocPluginConfig* ReqPreprocPluginConfig::New(::google::protobuf::Arena* arena) const {
  ReqPreprocPluginConfig* n = new ReqPreprocPluginConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqPreprocPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.ReqPreprocPluginConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqPreprocPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.ReqPreprocPluginConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ReqPreprocPluginConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ReqPreprocPluginConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.ReqPreprocPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.ReqPreprocPluginConfig)
  return false;
#undef DO_
}

void ReqPreprocPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.ReqPreprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPreprocPluginConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPreprocPluginConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.ReqPreprocPluginConfig)
}

::google::protobuf::uint8* ReqPreprocPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.ReqPreprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPreprocPluginConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPreprocPluginConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.ReqPreprocPluginConfig)
  return target;
}

size_t ReqPreprocPluginConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.ReqPreprocPluginConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
size_t ReqPreprocPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.ReqPreprocPluginConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqPreprocPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.ReqPreprocPluginConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqPreprocPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqPreprocPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.ReqPreprocPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.ReqPreprocPluginConfig)
    UnsafeMergeFrom(*source);
  }
}

void ReqPreprocPluginConfig::MergeFrom(const ReqPreprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.ReqPreprocPluginConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqPreprocPluginConfig::UnsafeMergeFrom(const ReqPreprocPluginConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReqPreprocPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.ReqPreprocPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPreprocPluginConfig::CopyFrom(const ReqPreprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.ReqPreprocPluginConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqPreprocPluginConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqPreprocPluginConfig::Swap(ReqPreprocPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqPreprocPluginConfig::InternalSwap(ReqPreprocPluginConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqPreprocPluginConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqPreprocPluginConfig_descriptor_;
  metadata.reflection = ReqPreprocPluginConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqPreprocPluginConfig

// required string type = 1;
bool ReqPreprocPluginConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReqPreprocPluginConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ReqPreprocPluginConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReqPreprocPluginConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& ReqPreprocPluginConfig::type() const {
  // @@protoc_insertion_point(field_get:nlper.ReqPreprocPluginConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ReqPreprocPluginConfig.type)
}
void ReqPreprocPluginConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ReqPreprocPluginConfig.type)
}
void ReqPreprocPluginConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ReqPreprocPluginConfig.type)
}
::std::string* ReqPreprocPluginConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:nlper.ReqPreprocPluginConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPreprocPluginConfig::release_type() {
  // @@protoc_insertion_point(field_release:nlper.ReqPreprocPluginConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:nlper.ReqPreprocPluginConfig.type)
}

// required string name = 2;
bool ReqPreprocPluginConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReqPreprocPluginConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ReqPreprocPluginConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReqPreprocPluginConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ReqPreprocPluginConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.ReqPreprocPluginConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ReqPreprocPluginConfig.name)
}
void ReqPreprocPluginConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ReqPreprocPluginConfig.name)
}
void ReqPreprocPluginConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ReqPreprocPluginConfig.name)
}
::std::string* ReqPreprocPluginConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.ReqPreprocPluginConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPreprocPluginConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.ReqPreprocPluginConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.ReqPreprocPluginConfig.name)
}

inline const ReqPreprocPluginConfig* ReqPreprocPluginConfig::internal_default_instance() {
  return &ReqPreprocPluginConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqPostprocPluginConfig::kTypeFieldNumber;
const int ReqPostprocPluginConfig::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqPostprocPluginConfig::ReqPostprocPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.ReqPostprocPluginConfig)
}

void ReqPostprocPluginConfig::InitAsDefaultInstance() {
}

ReqPostprocPluginConfig::ReqPostprocPluginConfig(const ReqPostprocPluginConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.ReqPostprocPluginConfig)
}

void ReqPostprocPluginConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqPostprocPluginConfig::~ReqPostprocPluginConfig() {
  // @@protoc_insertion_point(destructor:nlper.ReqPostprocPluginConfig)
  SharedDtor();
}

void ReqPostprocPluginConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqPostprocPluginConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqPostprocPluginConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqPostprocPluginConfig_descriptor_;
}

const ReqPostprocPluginConfig& ReqPostprocPluginConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqPostprocPluginConfig> ReqPostprocPluginConfig_default_instance_;

ReqPostprocPluginConfig* ReqPostprocPluginConfig::New(::google::protobuf::Arena* arena) const {
  ReqPostprocPluginConfig* n = new ReqPostprocPluginConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqPostprocPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.ReqPostprocPluginConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqPostprocPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.ReqPostprocPluginConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ReqPostprocPluginConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ReqPostprocPluginConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.ReqPostprocPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.ReqPostprocPluginConfig)
  return false;
#undef DO_
}

void ReqPostprocPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.ReqPostprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPostprocPluginConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPostprocPluginConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.ReqPostprocPluginConfig)
}

::google::protobuf::uint8* ReqPostprocPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.ReqPostprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPostprocPluginConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ReqPostprocPluginConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.ReqPostprocPluginConfig)
  return target;
}

size_t ReqPostprocPluginConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.ReqPostprocPluginConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
size_t ReqPostprocPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.ReqPostprocPluginConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqPostprocPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.ReqPostprocPluginConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqPostprocPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqPostprocPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.ReqPostprocPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.ReqPostprocPluginConfig)
    UnsafeMergeFrom(*source);
  }
}

void ReqPostprocPluginConfig::MergeFrom(const ReqPostprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.ReqPostprocPluginConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqPostprocPluginConfig::UnsafeMergeFrom(const ReqPostprocPluginConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReqPostprocPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.ReqPostprocPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPostprocPluginConfig::CopyFrom(const ReqPostprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.ReqPostprocPluginConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqPostprocPluginConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqPostprocPluginConfig::Swap(ReqPostprocPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqPostprocPluginConfig::InternalSwap(ReqPostprocPluginConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqPostprocPluginConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqPostprocPluginConfig_descriptor_;
  metadata.reflection = ReqPostprocPluginConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqPostprocPluginConfig

// required string type = 1;
bool ReqPostprocPluginConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReqPostprocPluginConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ReqPostprocPluginConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReqPostprocPluginConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& ReqPostprocPluginConfig::type() const {
  // @@protoc_insertion_point(field_get:nlper.ReqPostprocPluginConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ReqPostprocPluginConfig.type)
}
void ReqPostprocPluginConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ReqPostprocPluginConfig.type)
}
void ReqPostprocPluginConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ReqPostprocPluginConfig.type)
}
::std::string* ReqPostprocPluginConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:nlper.ReqPostprocPluginConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPostprocPluginConfig::release_type() {
  // @@protoc_insertion_point(field_release:nlper.ReqPostprocPluginConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:nlper.ReqPostprocPluginConfig.type)
}

// required string name = 2;
bool ReqPostprocPluginConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReqPostprocPluginConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ReqPostprocPluginConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReqPostprocPluginConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ReqPostprocPluginConfig::name() const {
  // @@protoc_insertion_point(field_get:nlper.ReqPostprocPluginConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ReqPostprocPluginConfig.name)
}
void ReqPostprocPluginConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ReqPostprocPluginConfig.name)
}
void ReqPostprocPluginConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ReqPostprocPluginConfig.name)
}
::std::string* ReqPostprocPluginConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:nlper.ReqPostprocPluginConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPostprocPluginConfig::release_name() {
  // @@protoc_insertion_point(field_release:nlper.ReqPostprocPluginConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nlper.ReqPostprocPluginConfig.name)
}

inline const ReqPostprocPluginConfig* ReqPostprocPluginConfig::internal_default_instance() {
  return &ReqPostprocPluginConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kIdleTimeoutSecFieldNumber;
const int ServerConfig::kMaxConcurrencyFieldNumber;
const int ServerConfig::kPortFieldNumber;
const int ServerConfig::kMethodFieldNumber;
const int ServerConfig::kServerConfDirFieldNumber;
const int ServerConfig::kLogConfFileFieldNumber;
const int ServerConfig::kNlperDictConfDirFieldNumber;
const int ServerConfig::kNlperConfDirFieldNumber;
const int ServerConfig::kQdmatchPreprocPluginFieldNumber;
const int ServerConfig::kQdmatchPostprocPluginFieldNumber;
const int ServerConfig::kDdmatchPreprocPluginFieldNumber;
const int ServerConfig::kDdmatchPostprocPluginFieldNumber;
const int ServerConfig::kSemtopicPreprocPluginFieldNumber;
const int ServerConfig::kSemtopicPostprocPluginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_nlper_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:nlper.ServerConfig)
}

void ServerConfig::InitAsDefaultInstance() {
  qdmatch_preproc_plugin_ = const_cast< ::nlper::ReqPreprocPluginConfig*>(
      ::nlper::ReqPreprocPluginConfig::internal_default_instance());
  qdmatch_postproc_plugin_ = const_cast< ::nlper::ReqPostprocPluginConfig*>(
      ::nlper::ReqPostprocPluginConfig::internal_default_instance());
  ddmatch_preproc_plugin_ = const_cast< ::nlper::ReqPreprocPluginConfig*>(
      ::nlper::ReqPreprocPluginConfig::internal_default_instance());
  ddmatch_postproc_plugin_ = const_cast< ::nlper::ReqPostprocPluginConfig*>(
      ::nlper::ReqPostprocPluginConfig::internal_default_instance());
  semtopic_preproc_plugin_ = const_cast< ::nlper::ReqPreprocPluginConfig*>(
      ::nlper::ReqPreprocPluginConfig::internal_default_instance());
  semtopic_postproc_plugin_ = const_cast< ::nlper::ReqPostprocPluginConfig*>(
      ::nlper::ReqPostprocPluginConfig::internal_default_instance());
}

ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nlper.ServerConfig)
}

void ServerConfig::SharedCtor() {
  _cached_size_ = 0;
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_conf_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlper_dict_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlper_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qdmatch_preproc_plugin_ = NULL;
  qdmatch_postproc_plugin_ = NULL;
  ddmatch_preproc_plugin_ = NULL;
  ddmatch_postproc_plugin_ = NULL;
  semtopic_preproc_plugin_ = NULL;
  semtopic_postproc_plugin_ = NULL;
  ::memset(&idle_timeout_sec_, 0, reinterpret_cast<char*>(&max_concurrency_) -
    reinterpret_cast<char*>(&idle_timeout_sec_) + sizeof(max_concurrency_));
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:nlper.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
  port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_conf_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlper_dict_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlper_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ServerConfig_default_instance_.get()) {
    delete qdmatch_preproc_plugin_;
    delete qdmatch_postproc_plugin_;
    delete ddmatch_preproc_plugin_;
    delete ddmatch_postproc_plugin_;
    delete semtopic_preproc_plugin_;
    delete semtopic_postproc_plugin_;
  }
}

void ServerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerConfig_descriptor_;
}

const ServerConfig& ServerConfig::default_instance() {
  protobuf_InitDefaults_nlper_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServerConfig> ServerConfig_default_instance_;

ServerConfig* ServerConfig::New(::google::protobuf::Arena* arena) const {
  ServerConfig* n = new ServerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nlper.ServerConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(idle_timeout_sec_, max_concurrency_);
    if (has_port()) {
      port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_method()) {
      method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_server_conf_dir()) {
      server_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_log_conf_file()) {
      log_conf_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_nlper_dict_conf_dir()) {
      nlper_dict_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_nlper_conf_dir()) {
      nlper_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    if (has_qdmatch_preproc_plugin()) {
      if (qdmatch_preproc_plugin_ != NULL) qdmatch_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
    }
    if (has_qdmatch_postproc_plugin()) {
      if (qdmatch_postproc_plugin_ != NULL) qdmatch_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
    }
    if (has_ddmatch_preproc_plugin()) {
      if (ddmatch_preproc_plugin_ != NULL) ddmatch_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
    }
    if (has_ddmatch_postproc_plugin()) {
      if (ddmatch_postproc_plugin_ != NULL) ddmatch_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
    }
    if (has_semtopic_preproc_plugin()) {
      if (semtopic_preproc_plugin_ != NULL) semtopic_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
    }
    if (has_semtopic_postproc_plugin()) {
      if (semtopic_postproc_plugin_ != NULL) semtopic_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nlper.ServerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idle_timeout_sec = 1;
      case 1: {
        if (tag == 8) {
          set_has_idle_timeout_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idle_timeout_sec_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_concurrency;
        break;
      }

      // required int32 max_concurrency = 2;
      case 2: {
        if (tag == 16) {
         parse_max_concurrency:
          set_has_max_concurrency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrency_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_port;
        break;
      }

      // required string port = 3;
      case 3: {
        if (tag == 26) {
         parse_port:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->port().data(), this->port().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.port");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_method;
        break;
      }

      // required string method = 4;
      case 4: {
        if (tag == 34) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.method");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_server_conf_dir;
        break;
      }

      // required string server_conf_dir = 5;
      case 5: {
        if (tag == 42) {
         parse_server_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_conf_dir().data(), this->server_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.server_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_log_conf_file;
        break;
      }

      // required string log_conf_file = 6;
      case 6: {
        if (tag == 50) {
         parse_log_conf_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_conf_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_conf_file().data(), this->log_conf_file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.log_conf_file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_nlper_dict_conf_dir;
        break;
      }

      // required string nlper_dict_conf_dir = 7;
      case 7: {
        if (tag == 58) {
         parse_nlper_dict_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nlper_dict_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nlper_dict_conf_dir().data(), this->nlper_dict_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.nlper_dict_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_nlper_conf_dir;
        break;
      }

      // required string nlper_conf_dir = 8;
      case 8: {
        if (tag == 66) {
         parse_nlper_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nlper_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nlper_conf_dir().data(), this->nlper_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nlper.ServerConfig.nlper_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_qdmatch_preproc_plugin;
        break;
      }

      // required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
      case 9: {
        if (tag == 74) {
         parse_qdmatch_preproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qdmatch_preproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_qdmatch_postproc_plugin;
        break;
      }

      // required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
      case 10: {
        if (tag == 82) {
         parse_qdmatch_postproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qdmatch_postproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_ddmatch_preproc_plugin;
        break;
      }

      // required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
      case 11: {
        if (tag == 90) {
         parse_ddmatch_preproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ddmatch_preproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_ddmatch_postproc_plugin;
        break;
      }

      // required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
      case 12: {
        if (tag == 98) {
         parse_ddmatch_postproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ddmatch_postproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_semtopic_preproc_plugin;
        break;
      }

      // required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
      case 13: {
        if (tag == 106) {
         parse_semtopic_preproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_semtopic_preproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_semtopic_postproc_plugin;
        break;
      }

      // required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
      case 14: {
        if (tag == 114) {
         parse_semtopic_postproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_semtopic_postproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nlper.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nlper.ServerConfig)
  return false;
#undef DO_
}

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nlper.ServerConfig)
  // required int32 idle_timeout_sec = 1;
  if (has_idle_timeout_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idle_timeout_sec(), output);
  }

  // required int32 max_concurrency = 2;
  if (has_max_concurrency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_concurrency(), output);
  }

  // required string port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->port(), output);
  }

  // required string method = 4;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->method(), output);
  }

  // required string server_conf_dir = 5;
  if (has_server_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_conf_dir().data(), this->server_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.server_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->server_conf_dir(), output);
  }

  // required string log_conf_file = 6;
  if (has_log_conf_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_conf_file().data(), this->log_conf_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.log_conf_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->log_conf_file(), output);
  }

  // required string nlper_dict_conf_dir = 7;
  if (has_nlper_dict_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nlper_dict_conf_dir().data(), this->nlper_dict_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.nlper_dict_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nlper_dict_conf_dir(), output);
  }

  // required string nlper_conf_dir = 8;
  if (has_nlper_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nlper_conf_dir().data(), this->nlper_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.nlper_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nlper_conf_dir(), output);
  }

  // required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
  if (has_qdmatch_preproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->qdmatch_preproc_plugin_, output);
  }

  // required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
  if (has_qdmatch_postproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->qdmatch_postproc_plugin_, output);
  }

  // required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
  if (has_ddmatch_preproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->ddmatch_preproc_plugin_, output);
  }

  // required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
  if (has_ddmatch_postproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->ddmatch_postproc_plugin_, output);
  }

  // required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
  if (has_semtopic_preproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->semtopic_preproc_plugin_, output);
  }

  // required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
  if (has_semtopic_postproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->semtopic_postproc_plugin_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:nlper.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nlper.ServerConfig)
  // required int32 idle_timeout_sec = 1;
  if (has_idle_timeout_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idle_timeout_sec(), target);
  }

  // required int32 max_concurrency = 2;
  if (has_max_concurrency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_concurrency(), target);
  }

  // required string port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->port(), target);
  }

  // required string method = 4;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->method(), target);
  }

  // required string server_conf_dir = 5;
  if (has_server_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_conf_dir().data(), this->server_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.server_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->server_conf_dir(), target);
  }

  // required string log_conf_file = 6;
  if (has_log_conf_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_conf_file().data(), this->log_conf_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.log_conf_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->log_conf_file(), target);
  }

  // required string nlper_dict_conf_dir = 7;
  if (has_nlper_dict_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nlper_dict_conf_dir().data(), this->nlper_dict_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.nlper_dict_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nlper_dict_conf_dir(), target);
  }

  // required string nlper_conf_dir = 8;
  if (has_nlper_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nlper_conf_dir().data(), this->nlper_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nlper.ServerConfig.nlper_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nlper_conf_dir(), target);
  }

  // required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
  if (has_qdmatch_preproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->qdmatch_preproc_plugin_, false, target);
  }

  // required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
  if (has_qdmatch_postproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->qdmatch_postproc_plugin_, false, target);
  }

  // required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
  if (has_ddmatch_preproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->ddmatch_preproc_plugin_, false, target);
  }

  // required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
  if (has_ddmatch_postproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->ddmatch_postproc_plugin_, false, target);
  }

  // required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
  if (has_semtopic_preproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->semtopic_preproc_plugin_, false, target);
  }

  // required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
  if (has_semtopic_postproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->semtopic_postproc_plugin_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nlper.ServerConfig)
  return target;
}

size_t ServerConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:nlper.ServerConfig)
  size_t total_size = 0;

  if (has_idle_timeout_sec()) {
    // required int32 idle_timeout_sec = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idle_timeout_sec());
  }

  if (has_max_concurrency()) {
    // required int32 max_concurrency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency());
  }

  if (has_port()) {
    // required string port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port());
  }

  if (has_method()) {
    // required string method = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  if (has_server_conf_dir()) {
    // required string server_conf_dir = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_conf_dir());
  }

  if (has_log_conf_file()) {
    // required string log_conf_file = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_conf_file());
  }

  if (has_nlper_dict_conf_dir()) {
    // required string nlper_dict_conf_dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nlper_dict_conf_dir());
  }

  if (has_nlper_conf_dir()) {
    // required string nlper_conf_dir = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nlper_conf_dir());
  }

  if (has_qdmatch_preproc_plugin()) {
    // required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qdmatch_preproc_plugin_);
  }

  if (has_qdmatch_postproc_plugin()) {
    // required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qdmatch_postproc_plugin_);
  }

  if (has_ddmatch_preproc_plugin()) {
    // required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ddmatch_preproc_plugin_);
  }

  if (has_ddmatch_postproc_plugin()) {
    // required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ddmatch_postproc_plugin_);
  }

  if (has_semtopic_preproc_plugin()) {
    // required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->semtopic_preproc_plugin_);
  }

  if (has_semtopic_postproc_plugin()) {
    // required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->semtopic_postproc_plugin_);
  }

  return total_size;
}
size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nlper.ServerConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00003fff) ^ 0x00003fff) == 0) {  // All required fields are present.
    // required int32 idle_timeout_sec = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idle_timeout_sec());

    // required int32 max_concurrency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency());

    // required string port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port());

    // required string method = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());

    // required string server_conf_dir = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_conf_dir());

    // required string log_conf_file = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_conf_file());

    // required string nlper_dict_conf_dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nlper_dict_conf_dir());

    // required string nlper_conf_dir = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nlper_conf_dir());

    // required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qdmatch_preproc_plugin_);

    // required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qdmatch_postproc_plugin_);

    // required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ddmatch_preproc_plugin_);

    // required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ddmatch_postproc_plugin_);

    // required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->semtopic_preproc_plugin_);

    // required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->semtopic_postproc_plugin_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nlper.ServerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nlper.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nlper.ServerConfig)
    UnsafeMergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nlper.ServerConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServerConfig::UnsafeMergeFrom(const ServerConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idle_timeout_sec()) {
      set_idle_timeout_sec(from.idle_timeout_sec());
    }
    if (from.has_max_concurrency()) {
      set_max_concurrency(from.max_concurrency());
    }
    if (from.has_port()) {
      set_has_port();
      port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
    }
    if (from.has_method()) {
      set_has_method();
      method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
    }
    if (from.has_server_conf_dir()) {
      set_has_server_conf_dir();
      server_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_conf_dir_);
    }
    if (from.has_log_conf_file()) {
      set_has_log_conf_file();
      log_conf_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_conf_file_);
    }
    if (from.has_nlper_dict_conf_dir()) {
      set_has_nlper_dict_conf_dir();
      nlper_dict_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nlper_dict_conf_dir_);
    }
    if (from.has_nlper_conf_dir()) {
      set_has_nlper_conf_dir();
      nlper_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nlper_conf_dir_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qdmatch_preproc_plugin()) {
      mutable_qdmatch_preproc_plugin()->::nlper::ReqPreprocPluginConfig::MergeFrom(from.qdmatch_preproc_plugin());
    }
    if (from.has_qdmatch_postproc_plugin()) {
      mutable_qdmatch_postproc_plugin()->::nlper::ReqPostprocPluginConfig::MergeFrom(from.qdmatch_postproc_plugin());
    }
    if (from.has_ddmatch_preproc_plugin()) {
      mutable_ddmatch_preproc_plugin()->::nlper::ReqPreprocPluginConfig::MergeFrom(from.ddmatch_preproc_plugin());
    }
    if (from.has_ddmatch_postproc_plugin()) {
      mutable_ddmatch_postproc_plugin()->::nlper::ReqPostprocPluginConfig::MergeFrom(from.ddmatch_postproc_plugin());
    }
    if (from.has_semtopic_preproc_plugin()) {
      mutable_semtopic_preproc_plugin()->::nlper::ReqPreprocPluginConfig::MergeFrom(from.semtopic_preproc_plugin());
    }
    if (from.has_semtopic_postproc_plugin()) {
      mutable_semtopic_postproc_plugin()->::nlper::ReqPostprocPluginConfig::MergeFrom(from.semtopic_postproc_plugin());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nlper.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nlper.ServerConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fff) != 0x00003fff) return false;

  if (has_qdmatch_preproc_plugin()) {
    if (!this->qdmatch_preproc_plugin_->IsInitialized()) return false;
  }
  if (has_qdmatch_postproc_plugin()) {
    if (!this->qdmatch_postproc_plugin_->IsInitialized()) return false;
  }
  if (has_ddmatch_preproc_plugin()) {
    if (!this->ddmatch_preproc_plugin_->IsInitialized()) return false;
  }
  if (has_ddmatch_postproc_plugin()) {
    if (!this->ddmatch_postproc_plugin_->IsInitialized()) return false;
  }
  if (has_semtopic_preproc_plugin()) {
    if (!this->semtopic_preproc_plugin_->IsInitialized()) return false;
  }
  if (has_semtopic_postproc_plugin()) {
    if (!this->semtopic_postproc_plugin_->IsInitialized()) return false;
  }
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  std::swap(idle_timeout_sec_, other->idle_timeout_sec_);
  std::swap(max_concurrency_, other->max_concurrency_);
  port_.Swap(&other->port_);
  method_.Swap(&other->method_);
  server_conf_dir_.Swap(&other->server_conf_dir_);
  log_conf_file_.Swap(&other->log_conf_file_);
  nlper_dict_conf_dir_.Swap(&other->nlper_dict_conf_dir_);
  nlper_conf_dir_.Swap(&other->nlper_conf_dir_);
  std::swap(qdmatch_preproc_plugin_, other->qdmatch_preproc_plugin_);
  std::swap(qdmatch_postproc_plugin_, other->qdmatch_postproc_plugin_);
  std::swap(ddmatch_preproc_plugin_, other->ddmatch_preproc_plugin_);
  std::swap(ddmatch_postproc_plugin_, other->ddmatch_postproc_plugin_);
  std::swap(semtopic_preproc_plugin_, other->semtopic_preproc_plugin_);
  std::swap(semtopic_postproc_plugin_, other->semtopic_postproc_plugin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerConfig_descriptor_;
  metadata.reflection = ServerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerConfig

// required int32 idle_timeout_sec = 1;
bool ServerConfig::has_idle_timeout_sec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerConfig::set_has_idle_timeout_sec() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerConfig::clear_has_idle_timeout_sec() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerConfig::clear_idle_timeout_sec() {
  idle_timeout_sec_ = 0;
  clear_has_idle_timeout_sec();
}
::google::protobuf::int32 ServerConfig::idle_timeout_sec() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.idle_timeout_sec)
  return idle_timeout_sec_;
}
void ServerConfig::set_idle_timeout_sec(::google::protobuf::int32 value) {
  set_has_idle_timeout_sec();
  idle_timeout_sec_ = value;
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.idle_timeout_sec)
}

// required int32 max_concurrency = 2;
bool ServerConfig::has_max_concurrency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerConfig::set_has_max_concurrency() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerConfig::clear_has_max_concurrency() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerConfig::clear_max_concurrency() {
  max_concurrency_ = 0;
  clear_has_max_concurrency();
}
::google::protobuf::int32 ServerConfig::max_concurrency() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.max_concurrency)
  return max_concurrency_;
}
void ServerConfig::set_max_concurrency(::google::protobuf::int32 value) {
  set_has_max_concurrency();
  max_concurrency_ = value;
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.max_concurrency)
}

// required string port = 3;
bool ServerConfig::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerConfig::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerConfig::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerConfig::clear_port() {
  port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_port();
}
const ::std::string& ServerConfig::port() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.port)
  return port_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_port(const ::std::string& value) {
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.port)
}
void ServerConfig::set_port(const char* value) {
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.port)
}
void ServerConfig::set_port(const char* value, size_t size) {
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.port)
}
::std::string* ServerConfig::mutable_port() {
  set_has_port();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.port)
  return port_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_port() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.port)
  clear_has_port();
  return port_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_port(::std::string* port) {
  if (port != NULL) {
    set_has_port();
  } else {
    clear_has_port();
  }
  port_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), port);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.port)
}

// required string method = 4;
bool ServerConfig::has_method() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ServerConfig::set_has_method() {
  _has_bits_[0] |= 0x00000008u;
}
void ServerConfig::clear_has_method() {
  _has_bits_[0] &= ~0x00000008u;
}
void ServerConfig::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
const ::std::string& ServerConfig::method() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.method)
}
void ServerConfig::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.method)
}
void ServerConfig::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.method)
}
::std::string* ServerConfig::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_method() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.method)
}

// required string server_conf_dir = 5;
bool ServerConfig::has_server_conf_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ServerConfig::set_has_server_conf_dir() {
  _has_bits_[0] |= 0x00000010u;
}
void ServerConfig::clear_has_server_conf_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
void ServerConfig::clear_server_conf_dir() {
  server_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_conf_dir();
}
const ::std::string& ServerConfig::server_conf_dir() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.server_conf_dir)
  return server_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_server_conf_dir(const ::std::string& value) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.server_conf_dir)
}
void ServerConfig::set_server_conf_dir(const char* value) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.server_conf_dir)
}
void ServerConfig::set_server_conf_dir(const char* value, size_t size) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.server_conf_dir)
}
::std::string* ServerConfig::mutable_server_conf_dir() {
  set_has_server_conf_dir();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.server_conf_dir)
  return server_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_server_conf_dir() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.server_conf_dir)
  clear_has_server_conf_dir();
  return server_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_server_conf_dir(::std::string* server_conf_dir) {
  if (server_conf_dir != NULL) {
    set_has_server_conf_dir();
  } else {
    clear_has_server_conf_dir();
  }
  server_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.server_conf_dir)
}

// required string log_conf_file = 6;
bool ServerConfig::has_log_conf_file() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ServerConfig::set_has_log_conf_file() {
  _has_bits_[0] |= 0x00000020u;
}
void ServerConfig::clear_has_log_conf_file() {
  _has_bits_[0] &= ~0x00000020u;
}
void ServerConfig::clear_log_conf_file() {
  log_conf_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log_conf_file();
}
const ::std::string& ServerConfig::log_conf_file() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.log_conf_file)
  return log_conf_file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_log_conf_file(const ::std::string& value) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.log_conf_file)
}
void ServerConfig::set_log_conf_file(const char* value) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.log_conf_file)
}
void ServerConfig::set_log_conf_file(const char* value, size_t size) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.log_conf_file)
}
::std::string* ServerConfig::mutable_log_conf_file() {
  set_has_log_conf_file();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.log_conf_file)
  return log_conf_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_log_conf_file() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.log_conf_file)
  clear_has_log_conf_file();
  return log_conf_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_log_conf_file(::std::string* log_conf_file) {
  if (log_conf_file != NULL) {
    set_has_log_conf_file();
  } else {
    clear_has_log_conf_file();
  }
  log_conf_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_conf_file);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.log_conf_file)
}

// required string nlper_dict_conf_dir = 7;
bool ServerConfig::has_nlper_dict_conf_dir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ServerConfig::set_has_nlper_dict_conf_dir() {
  _has_bits_[0] |= 0x00000040u;
}
void ServerConfig::clear_has_nlper_dict_conf_dir() {
  _has_bits_[0] &= ~0x00000040u;
}
void ServerConfig::clear_nlper_dict_conf_dir() {
  nlper_dict_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nlper_dict_conf_dir();
}
const ::std::string& ServerConfig::nlper_dict_conf_dir() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.nlper_dict_conf_dir)
  return nlper_dict_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_nlper_dict_conf_dir(const ::std::string& value) {
  set_has_nlper_dict_conf_dir();
  nlper_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.nlper_dict_conf_dir)
}
void ServerConfig::set_nlper_dict_conf_dir(const char* value) {
  set_has_nlper_dict_conf_dir();
  nlper_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.nlper_dict_conf_dir)
}
void ServerConfig::set_nlper_dict_conf_dir(const char* value, size_t size) {
  set_has_nlper_dict_conf_dir();
  nlper_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.nlper_dict_conf_dir)
}
::std::string* ServerConfig::mutable_nlper_dict_conf_dir() {
  set_has_nlper_dict_conf_dir();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.nlper_dict_conf_dir)
  return nlper_dict_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_nlper_dict_conf_dir() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.nlper_dict_conf_dir)
  clear_has_nlper_dict_conf_dir();
  return nlper_dict_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_nlper_dict_conf_dir(::std::string* nlper_dict_conf_dir) {
  if (nlper_dict_conf_dir != NULL) {
    set_has_nlper_dict_conf_dir();
  } else {
    clear_has_nlper_dict_conf_dir();
  }
  nlper_dict_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nlper_dict_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.nlper_dict_conf_dir)
}

// required string nlper_conf_dir = 8;
bool ServerConfig::has_nlper_conf_dir() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ServerConfig::set_has_nlper_conf_dir() {
  _has_bits_[0] |= 0x00000080u;
}
void ServerConfig::clear_has_nlper_conf_dir() {
  _has_bits_[0] &= ~0x00000080u;
}
void ServerConfig::clear_nlper_conf_dir() {
  nlper_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nlper_conf_dir();
}
const ::std::string& ServerConfig::nlper_conf_dir() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.nlper_conf_dir)
  return nlper_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_nlper_conf_dir(const ::std::string& value) {
  set_has_nlper_conf_dir();
  nlper_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nlper.ServerConfig.nlper_conf_dir)
}
void ServerConfig::set_nlper_conf_dir(const char* value) {
  set_has_nlper_conf_dir();
  nlper_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nlper.ServerConfig.nlper_conf_dir)
}
void ServerConfig::set_nlper_conf_dir(const char* value, size_t size) {
  set_has_nlper_conf_dir();
  nlper_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nlper.ServerConfig.nlper_conf_dir)
}
::std::string* ServerConfig::mutable_nlper_conf_dir() {
  set_has_nlper_conf_dir();
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.nlper_conf_dir)
  return nlper_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_nlper_conf_dir() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.nlper_conf_dir)
  clear_has_nlper_conf_dir();
  return nlper_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_nlper_conf_dir(::std::string* nlper_conf_dir) {
  if (nlper_conf_dir != NULL) {
    set_has_nlper_conf_dir();
  } else {
    clear_has_nlper_conf_dir();
  }
  nlper_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nlper_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.nlper_conf_dir)
}

// required .nlper.ReqPreprocPluginConfig qdmatch_preproc_plugin = 9;
bool ServerConfig::has_qdmatch_preproc_plugin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ServerConfig::set_has_qdmatch_preproc_plugin() {
  _has_bits_[0] |= 0x00000100u;
}
void ServerConfig::clear_has_qdmatch_preproc_plugin() {
  _has_bits_[0] &= ~0x00000100u;
}
void ServerConfig::clear_qdmatch_preproc_plugin() {
  if (qdmatch_preproc_plugin_ != NULL) qdmatch_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
  clear_has_qdmatch_preproc_plugin();
}
const ::nlper::ReqPreprocPluginConfig& ServerConfig::qdmatch_preproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.qdmatch_preproc_plugin)
  return qdmatch_preproc_plugin_ != NULL ? *qdmatch_preproc_plugin_
                         : *::nlper::ReqPreprocPluginConfig::internal_default_instance();
}
::nlper::ReqPreprocPluginConfig* ServerConfig::mutable_qdmatch_preproc_plugin() {
  set_has_qdmatch_preproc_plugin();
  if (qdmatch_preproc_plugin_ == NULL) {
    qdmatch_preproc_plugin_ = new ::nlper::ReqPreprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.qdmatch_preproc_plugin)
  return qdmatch_preproc_plugin_;
}
::nlper::ReqPreprocPluginConfig* ServerConfig::release_qdmatch_preproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.qdmatch_preproc_plugin)
  clear_has_qdmatch_preproc_plugin();
  ::nlper::ReqPreprocPluginConfig* temp = qdmatch_preproc_plugin_;
  qdmatch_preproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_qdmatch_preproc_plugin(::nlper::ReqPreprocPluginConfig* qdmatch_preproc_plugin) {
  delete qdmatch_preproc_plugin_;
  qdmatch_preproc_plugin_ = qdmatch_preproc_plugin;
  if (qdmatch_preproc_plugin) {
    set_has_qdmatch_preproc_plugin();
  } else {
    clear_has_qdmatch_preproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.qdmatch_preproc_plugin)
}

// required .nlper.ReqPostprocPluginConfig qdmatch_postproc_plugin = 10;
bool ServerConfig::has_qdmatch_postproc_plugin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ServerConfig::set_has_qdmatch_postproc_plugin() {
  _has_bits_[0] |= 0x00000200u;
}
void ServerConfig::clear_has_qdmatch_postproc_plugin() {
  _has_bits_[0] &= ~0x00000200u;
}
void ServerConfig::clear_qdmatch_postproc_plugin() {
  if (qdmatch_postproc_plugin_ != NULL) qdmatch_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
  clear_has_qdmatch_postproc_plugin();
}
const ::nlper::ReqPostprocPluginConfig& ServerConfig::qdmatch_postproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.qdmatch_postproc_plugin)
  return qdmatch_postproc_plugin_ != NULL ? *qdmatch_postproc_plugin_
                         : *::nlper::ReqPostprocPluginConfig::internal_default_instance();
}
::nlper::ReqPostprocPluginConfig* ServerConfig::mutable_qdmatch_postproc_plugin() {
  set_has_qdmatch_postproc_plugin();
  if (qdmatch_postproc_plugin_ == NULL) {
    qdmatch_postproc_plugin_ = new ::nlper::ReqPostprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.qdmatch_postproc_plugin)
  return qdmatch_postproc_plugin_;
}
::nlper::ReqPostprocPluginConfig* ServerConfig::release_qdmatch_postproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.qdmatch_postproc_plugin)
  clear_has_qdmatch_postproc_plugin();
  ::nlper::ReqPostprocPluginConfig* temp = qdmatch_postproc_plugin_;
  qdmatch_postproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_qdmatch_postproc_plugin(::nlper::ReqPostprocPluginConfig* qdmatch_postproc_plugin) {
  delete qdmatch_postproc_plugin_;
  qdmatch_postproc_plugin_ = qdmatch_postproc_plugin;
  if (qdmatch_postproc_plugin) {
    set_has_qdmatch_postproc_plugin();
  } else {
    clear_has_qdmatch_postproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.qdmatch_postproc_plugin)
}

// required .nlper.ReqPreprocPluginConfig ddmatch_preproc_plugin = 11;
bool ServerConfig::has_ddmatch_preproc_plugin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ServerConfig::set_has_ddmatch_preproc_plugin() {
  _has_bits_[0] |= 0x00000400u;
}
void ServerConfig::clear_has_ddmatch_preproc_plugin() {
  _has_bits_[0] &= ~0x00000400u;
}
void ServerConfig::clear_ddmatch_preproc_plugin() {
  if (ddmatch_preproc_plugin_ != NULL) ddmatch_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
  clear_has_ddmatch_preproc_plugin();
}
const ::nlper::ReqPreprocPluginConfig& ServerConfig::ddmatch_preproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.ddmatch_preproc_plugin)
  return ddmatch_preproc_plugin_ != NULL ? *ddmatch_preproc_plugin_
                         : *::nlper::ReqPreprocPluginConfig::internal_default_instance();
}
::nlper::ReqPreprocPluginConfig* ServerConfig::mutable_ddmatch_preproc_plugin() {
  set_has_ddmatch_preproc_plugin();
  if (ddmatch_preproc_plugin_ == NULL) {
    ddmatch_preproc_plugin_ = new ::nlper::ReqPreprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.ddmatch_preproc_plugin)
  return ddmatch_preproc_plugin_;
}
::nlper::ReqPreprocPluginConfig* ServerConfig::release_ddmatch_preproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.ddmatch_preproc_plugin)
  clear_has_ddmatch_preproc_plugin();
  ::nlper::ReqPreprocPluginConfig* temp = ddmatch_preproc_plugin_;
  ddmatch_preproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_ddmatch_preproc_plugin(::nlper::ReqPreprocPluginConfig* ddmatch_preproc_plugin) {
  delete ddmatch_preproc_plugin_;
  ddmatch_preproc_plugin_ = ddmatch_preproc_plugin;
  if (ddmatch_preproc_plugin) {
    set_has_ddmatch_preproc_plugin();
  } else {
    clear_has_ddmatch_preproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.ddmatch_preproc_plugin)
}

// required .nlper.ReqPostprocPluginConfig ddmatch_postproc_plugin = 12;
bool ServerConfig::has_ddmatch_postproc_plugin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ServerConfig::set_has_ddmatch_postproc_plugin() {
  _has_bits_[0] |= 0x00000800u;
}
void ServerConfig::clear_has_ddmatch_postproc_plugin() {
  _has_bits_[0] &= ~0x00000800u;
}
void ServerConfig::clear_ddmatch_postproc_plugin() {
  if (ddmatch_postproc_plugin_ != NULL) ddmatch_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
  clear_has_ddmatch_postproc_plugin();
}
const ::nlper::ReqPostprocPluginConfig& ServerConfig::ddmatch_postproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.ddmatch_postproc_plugin)
  return ddmatch_postproc_plugin_ != NULL ? *ddmatch_postproc_plugin_
                         : *::nlper::ReqPostprocPluginConfig::internal_default_instance();
}
::nlper::ReqPostprocPluginConfig* ServerConfig::mutable_ddmatch_postproc_plugin() {
  set_has_ddmatch_postproc_plugin();
  if (ddmatch_postproc_plugin_ == NULL) {
    ddmatch_postproc_plugin_ = new ::nlper::ReqPostprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.ddmatch_postproc_plugin)
  return ddmatch_postproc_plugin_;
}
::nlper::ReqPostprocPluginConfig* ServerConfig::release_ddmatch_postproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.ddmatch_postproc_plugin)
  clear_has_ddmatch_postproc_plugin();
  ::nlper::ReqPostprocPluginConfig* temp = ddmatch_postproc_plugin_;
  ddmatch_postproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_ddmatch_postproc_plugin(::nlper::ReqPostprocPluginConfig* ddmatch_postproc_plugin) {
  delete ddmatch_postproc_plugin_;
  ddmatch_postproc_plugin_ = ddmatch_postproc_plugin;
  if (ddmatch_postproc_plugin) {
    set_has_ddmatch_postproc_plugin();
  } else {
    clear_has_ddmatch_postproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.ddmatch_postproc_plugin)
}

// required .nlper.ReqPreprocPluginConfig semtopic_preproc_plugin = 13;
bool ServerConfig::has_semtopic_preproc_plugin() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ServerConfig::set_has_semtopic_preproc_plugin() {
  _has_bits_[0] |= 0x00001000u;
}
void ServerConfig::clear_has_semtopic_preproc_plugin() {
  _has_bits_[0] &= ~0x00001000u;
}
void ServerConfig::clear_semtopic_preproc_plugin() {
  if (semtopic_preproc_plugin_ != NULL) semtopic_preproc_plugin_->::nlper::ReqPreprocPluginConfig::Clear();
  clear_has_semtopic_preproc_plugin();
}
const ::nlper::ReqPreprocPluginConfig& ServerConfig::semtopic_preproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.semtopic_preproc_plugin)
  return semtopic_preproc_plugin_ != NULL ? *semtopic_preproc_plugin_
                         : *::nlper::ReqPreprocPluginConfig::internal_default_instance();
}
::nlper::ReqPreprocPluginConfig* ServerConfig::mutable_semtopic_preproc_plugin() {
  set_has_semtopic_preproc_plugin();
  if (semtopic_preproc_plugin_ == NULL) {
    semtopic_preproc_plugin_ = new ::nlper::ReqPreprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.semtopic_preproc_plugin)
  return semtopic_preproc_plugin_;
}
::nlper::ReqPreprocPluginConfig* ServerConfig::release_semtopic_preproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.semtopic_preproc_plugin)
  clear_has_semtopic_preproc_plugin();
  ::nlper::ReqPreprocPluginConfig* temp = semtopic_preproc_plugin_;
  semtopic_preproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_semtopic_preproc_plugin(::nlper::ReqPreprocPluginConfig* semtopic_preproc_plugin) {
  delete semtopic_preproc_plugin_;
  semtopic_preproc_plugin_ = semtopic_preproc_plugin;
  if (semtopic_preproc_plugin) {
    set_has_semtopic_preproc_plugin();
  } else {
    clear_has_semtopic_preproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.semtopic_preproc_plugin)
}

// required .nlper.ReqPostprocPluginConfig semtopic_postproc_plugin = 14;
bool ServerConfig::has_semtopic_postproc_plugin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ServerConfig::set_has_semtopic_postproc_plugin() {
  _has_bits_[0] |= 0x00002000u;
}
void ServerConfig::clear_has_semtopic_postproc_plugin() {
  _has_bits_[0] &= ~0x00002000u;
}
void ServerConfig::clear_semtopic_postproc_plugin() {
  if (semtopic_postproc_plugin_ != NULL) semtopic_postproc_plugin_->::nlper::ReqPostprocPluginConfig::Clear();
  clear_has_semtopic_postproc_plugin();
}
const ::nlper::ReqPostprocPluginConfig& ServerConfig::semtopic_postproc_plugin() const {
  // @@protoc_insertion_point(field_get:nlper.ServerConfig.semtopic_postproc_plugin)
  return semtopic_postproc_plugin_ != NULL ? *semtopic_postproc_plugin_
                         : *::nlper::ReqPostprocPluginConfig::internal_default_instance();
}
::nlper::ReqPostprocPluginConfig* ServerConfig::mutable_semtopic_postproc_plugin() {
  set_has_semtopic_postproc_plugin();
  if (semtopic_postproc_plugin_ == NULL) {
    semtopic_postproc_plugin_ = new ::nlper::ReqPostprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:nlper.ServerConfig.semtopic_postproc_plugin)
  return semtopic_postproc_plugin_;
}
::nlper::ReqPostprocPluginConfig* ServerConfig::release_semtopic_postproc_plugin() {
  // @@protoc_insertion_point(field_release:nlper.ServerConfig.semtopic_postproc_plugin)
  clear_has_semtopic_postproc_plugin();
  ::nlper::ReqPostprocPluginConfig* temp = semtopic_postproc_plugin_;
  semtopic_postproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_semtopic_postproc_plugin(::nlper::ReqPostprocPluginConfig* semtopic_postproc_plugin) {
  delete semtopic_postproc_plugin_;
  semtopic_postproc_plugin_ = semtopic_postproc_plugin;
  if (semtopic_postproc_plugin) {
    set_has_semtopic_postproc_plugin();
  } else {
    clear_has_semtopic_postproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:nlper.ServerConfig.semtopic_postproc_plugin)
}

inline const ServerConfig* ServerConfig::internal_default_instance() {
  return &ServerConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace nlper

// @@protoc_insertion_point(global_scope)
